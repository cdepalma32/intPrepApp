require('dotenv').config(); // load env
const mongoose = require('mongoose');

// Importing models
const Topic = require('../models/Topic');
const InterviewQuestion = require('../models/InterviewQuestion');
const Anagram = require('../models/Anagram');
const User = require('../models/User');

// use the same connection string logic
const connectionString = process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017/intprepapp';

// Connect to MongoDB using environment variables
async function connectDB() {
    try {
        await mongoose.connect(connectionString); // No deprecated options
        console.log('Connected to the database!');
    } catch (err) {
        console.error('MongoDB connection error:', err);
        process.exit(1); // Exit process if connection fails
    }
}

// Seed function
async function seed() {
    try {
        // Remove all existing data (ensuring a fresh start each time the seed script is run)
        console.log('Clearing existing data...');
        await Topic.deleteMany({});
        await InterviewQuestion.deleteMany({});
        await Anagram.deleteMany({});
        await User.deleteMany({});
        console.log('Database cleared!');

        // Seed topics
        const topics = await Topic.create([
            { name: 'JavaScript', description: 'Interview questions related to JavaScript' },
            { name: 'React', description: 'Interview questions related to React' },
            { name: 'Node.js', description: 'Interview questions related to Node.js' },
            { name: 'MongoDB', description: 'Interview questions related to MongoDB' },
            { name: 'Express', description: 'Interview questions related to Express' },
        ]);
        console.log(`Seeded ${topics.length} topics!`);

        // Seed interview questions
        const questions = await InterviewQuestion.create([
            // JavaScript
            { question: 'What is the difference between `let`, `var`, and `const`?', correctAnswer: 'Let and const are block-scoped, var is function-scoped.', topic: topics[0]._id },
            { question: 'How does prototypal inheritance work in JavaScript?', correctAnswer: 'Objects inherit properties and methods from their prototype.', topic: topics[0]._id },
            { question: 'What are promises, and how are they different from callbacks?', correctAnswer: 'Promises represent future values, callbacks are functions passed as arguments.', topic: topics[0]._id },
            { question: 'What is the purpose of the `this` keyword in JavaScript?', correctAnswer: 'Refers to the current object or context.', topic: topics[0]._id },
            { question: 'Explain the difference between `==` and `===`.', correctAnswer: '== compares values with type coercion, === compares both values and type.', topic: topics[0]._id },

            // React
            { question: 'What is the virtual DOM, and how does it work?', correctAnswer: 'A lightweight copy of the real DOM that updates efficiently.', topic: topics[1]._id },
            { question: 'What are React Hooks, and why are they useful?', correctAnswer: 'Functions that allow state and lifecycle management in functional components.', topic: topics[1]._id },
            { question: 'How do you handle state in a React application?', correctAnswer: 'Using useState hook or state management libraries (e.g., Redux).', topic: topics[1]._id },
            { question: 'What are the differences between controlled and uncontrolled components?', correctAnswer: 'Controlled componenets have their state managed by React, uncontrolled are managed by the DOM.', topic: topics[1]._id },
            { question: 'How does React handle component re-rendering?', correctAnswer: 'Re-renders when state or props change.', topic: topics[1]._id },

            // Node.js
            { question: 'What is the difference between `process.nextTick()` and `setImmediate()`?', correctAnswer: 'process.nextTick() runs after the current operation, setImmediate() runs in the next event loop cycle.', topic: topics[2]._id },
            { question: 'Explain how event-driven programming works in Node.js.', correctAnswer: 'Node.js uses an event loop to handle asynchronous events and callbacks.', topic: topics[2]._id },
            { question: 'What are streams in Node.js, and how are they used?', correctAnswer: 'Streams are used to read and write data in chunks, e.g., file operations.', topic: topics[2]._id },
            { question: 'How does Node.js handle file I/O operations?', correctAnswer: 'Node.js uses asynchronous, non-blocking file system methods.', topic: topics[2]._id },
            { question: 'What is middleware in the context of Node.js?', correctAnswer: 'Functions that process requests before reaching the route handler.', topic: topics[2]._id },

            // MongoDB
            { question: 'What are the advantages of using MongoDB over relational databases?', correctAnswer: 'Flexible schema, horizontal scalability, JSON-like documents.', topic: topics[3]._id },
            { question: 'How does MongoDB handle indexing?', correctAnswer: 'Indexes speed up query performance.', topic: topics[3]._id },
            { question: 'What is the purpose of the `ObjectId` in MongoDB?', correctAnswer: 'A unique identifier for documents in a collection.', topic: topics[3]._id },
            { question: 'Explain how replication works in MongoDB.', correctAnswer: 'Data is duplicated across multiple servers to ensure availability.', topic: topics[3]._id },
            { question: 'What are aggregation pipelines in MongoDB?', correctAnswer: 'A framework for processing data and performing operations like filtering, grouping, and sorting.', topic: topics[3]._id },

            // Express
            { question: 'What is middleware in Express, and how is it used?', correctAnswer: 'Functions that modify requests and responses in the request-response cycle.', topic: topics[4]._id },
            { question: 'How do you handle error handling in Express applications?', correctAnswer: 'Using error-handling middleware with four parameters (err, req, res, next).', topic: topics[4]._id },
            { question: 'What is the difference between `app.use()` and `app.get()` in Express?', correctAnswer: 'app.use() defines middleware, app.get() defines route handlers.', topic: topics[4]._id },
            { question: 'How do you define a dynamic route in Express?', correctAnswer: 'By using :param in the route path, e.g., /user/:id.', topic: topics[4]._id },
            { question: 'How can you secure an Express application?', correctAnswer: 'Use HTTPS, middleware like helmet, and sanitize user inputs.', topic: topics[4]._id },
        ]);
        console.log(`Seeded ${questions.length} interview questions!`);

        // Seed anagrams with topic references
        const anagrams = await Anagram.create([
           
// JavaScript
{ word: 'function', scrambled: 'nnouftci', solution: 'function', topic: topics[0]._id },
{ word: 'variable', scrambled: 'avlareib', solution: 'variable', topic: topics[0]._id },
{ word: 'object', scrambled: 'ejtcbo', solution: 'object', topic: topics[0]._id },
{ word: 'array', scrambled: 'ayrra', solution: 'array', topic: topics[0]._id },
{ word: 'string', scrambled: 'ngisrt', solution: 'string', topic: topics[0]._id },
{ word: 'number', scrambled: 'unermb', solution: 'number', topic: topics[0]._id },
{ word: 'boolean', scrambled: 'beaonlo', solution: 'boolean', topic: topics[0]._id },
{ word: 'undefined', scrambled: 'einuendfd', solution: 'undefined', topic: topics[0]._id },
{ word: 'null', scrambled: 'null', solution: 'null', topic: topics[0]._id },
{ word: 'symbol', scrambled: 'yombsl', solution: 'symbol', topic: topics[0]._id },
{ word: 'big int', scrambled: 'gtnbii', solution: 'big int', topic: topics[0]._id },
{ word: 'map', scrambled: 'map', solution: 'map', topic: topics[0]._id },
{ word: 'set', scrambled: 'est', solution: 'set', topic: topics[0]._id },
{ word: 'weakmap', scrambled: 'aampwek', solution: 'weakmap', topic: topics[0]._id },
{ word: 'weakset', scrambled: 'atkwsee', solution: 'weakset', topic: topics[0]._id },
{ word: 'json', scrambled: 'jons', solution: 'json', topic: topics[0]._id },
{ word: 'date', scrambled: 'atde', solution: 'date', topic: topics[0]._id },
{ word: 'regexp', scrambled: 'erexgp', solution: 'regexp', topic: topics[0]._id },
{ word: 'error', scrambled: 'error', solution: 'error', topic: topics[0]._id },
{ word: 'promise', scrambled: 'msroeip', solution: 'promise', topic: topics[0]._id },
{ word: 'async', scrambled: 'sacyn', solution: 'async', topic: topics[0]._id },
{ word: 'await', scrambled: 'awati', solution: 'await', topic: topics[0]._id },
{ word: 'callback', scrambled: 'bakcclal', solution: 'callback', topic: topics[0]._id },
{ word: 'closure', scrambled: 'rucolse', solution: 'closure', topic: topics[0]._id },
{ word: 'prototype', scrambled: 'popettyro', solution: 'prototype', topic: topics[0]._id },
{ word: 'inheritance', scrambled: 'nhnraeeicti', solution: 'inheritance', topic: topics[0]._id },
{ word: 'encapsulation', scrambled: 'eiaalcnnoustp', solution: 'encapsulation', topic: topics[0]._id },
{ word: 'polymorphism', scrambled: 'spohopylimmr', solution: 'polymorphism', topic: topics[0]._id },
{ word: 'class', scrambled: 'sacls', solution: 'class', topic: topics[0]._id },
{ word: 'constructor', scrambled: 'rctrcsotnou', solution: 'constructor', topic: topics[0]._id },
{ word: 'instance', scrambled: 'csatinen', solution: 'instance', topic: topics[0]._id },
{ word: 'method', scrambled: 'omhted', solution: 'method', topic: topics[0]._id },
{ word: 'property', scrambled: 'typropre', solution: 'property', topic: topics[0]._id },
{ word: 'getter', scrambled: 'egertt', solution: 'getter', topic: topics[0]._id },
{ word: 'setter', scrambled: 'reetst', solution: 'setter', topic: topics[0]._id },
{ word: 'loop', scrambled: 'olop', solution: 'loop', topic: topics[0]._id },
{ word: 'for', scrambled: 'for', solution: 'for', topic: topics[0]._id },
{ word: 'while', scrambled: 'hlewi', solution: 'while', topic: topics[0]._id },
{ word: 'do', scrambled: 'do', solution: 'do', topic: topics[0]._id },
{ word: 'switch', scrambled: 'whtisc', solution: 'switch', topic: topics[0]._id },
{ word: 'case', scrambled: 'acse', solution: 'case', topic: topics[0]._id },
{ word: 'break', scrambled: 'rbaek', solution: 'break', topic: topics[0]._id },
{ word: 'continue', scrambled: 'icoenntu', solution: 'continue', topic: topics[0]._id },
{ word: 'if', scrambled: 'if', solution: 'if', topic: topics[0]._id },
{ word: 'else', scrambled: 'else', solution: 'else', topic: topics[0]._id },
{ word: 'try', scrambled: 'rty', solution: 'try', topic: topics[0]._id },
{ word: 'catch', scrambled: 'hatcc', solution: 'catch', topic: topics[0]._id },
{ word: 'finally', scrambled: 'nyialfl', solution: 'finally', topic: topics[0]._id },
{ word: 'throw', scrambled: 'rtowh', solution: 'throw', topic: topics[0]._id },
{ word: 'return', scrambled: 'rtnrue', solution: 'return', topic: topics[0]._id },
{ word: 'import', scrambled: 'ormitp', solution: 'import', topic: topics[0]._id },
{ word: 'export', scrambled: 'rxotep', solution: 'export', topic: topics[0]._id },
{ word: 'default', scrambled: 'elutdfa', solution: 'default', topic: topics[0]._id },
{ word: 'module', scrambled: 'oeludm', solution: 'module', topic: topics[0]._id },
{ word: 'require', scrambled: 'riuerqe', solution: 'require', topic: topics[0]._id },
{ word: 'node', scrambled: 'ndeo', solution: 'node', topic: topics[0]._id },
{ word: 'npm', scrambled: 'mpn', solution: 'npm', topic: topics[0]._id },
{ word: 'yarn', scrambled: 'rnay', solution: 'yarn', topic: topics[0]._id },
{ word: 'webpack', scrambled: 'ebcwpka', solution: 'webpack', topic: topics[0]._id },
{ word: 'babel', scrambled: 'bebla', solution: 'babel', topic: topics[0]._id },
{ word: 'transpile', scrambled: 'rlistepan', solution: 'transpile', topic: topics[0]._id },
{ word: 'compile', scrambled: 'ocimlpe', solution: 'compile', topic: topics[0]._id },
{ word: 'debug', scrambled: 'dbgeu', solution: 'debug', topic: topics[0]._id },
{ word: 'test', scrambled: 'sett', solution: 'test', topic: topics[0]._id },
{ word: 'jest', scrambled: 'jets', solution: 'jest', topic: topics[0]._id },
{ word: 'mocha', scrambled: 'omach', solution: 'mocha', topic: topics[0]._id },
{ word: 'chai', scrambled: 'ciah', solution: 'chai', topic: topics[0]._id },
{ word: 'assert', scrambled: 'esrtsa', solution: 'assert', topic: topics[0]._id },
{ word: 'lint', scrambled: 'itln', solution: 'lint', topic: topics[0]._id },
{ word: 'eslint', scrambled: 'tinles', solution: 'eslint', topic: topics[0]._id },
{ word: 'prettier', scrambled: 'ttieprre', solution: 'prettier', topic: topics[0]._id },
{ word: 'scope', scrambled: 'scope', solution: 'scope', topic: topics[0]._id },
{ word: 'hoisting', scrambled: 'tshonigi', solution: 'hoisting', topic: topics[0]._id },
{ word: 'tdz', scrambled: 'dzt', solution: 'tdz', topic: topics[0]._id },
{ word: 'context', scrambled: 'xntetoc', solution: 'context', topic: topics[0]._id },
{ word: 'this', scrambled: 'hits', solution: 'this', topic: topics[0]._id },
{ word: 'bind', scrambled: 'idnb', solution: 'bind', topic: topics[0]._id },
{ word: 'call', scrambled: 'allc', solution: 'call', topic: topics[0]._id },
{ word: 'apply', scrambled: 'ypapl', solution: 'apply', topic: topics[0]._id },
{ word: 'arrow', scrambled: 'roawr', solution: 'arrow', topic: topics[0]._id },
{ word: 'spread', scrambled: 'srdpae', solution: 'spread', topic: topics[0]._id },
{ word: 'rest', scrambled: 'rets', solution: 'rest', topic: topics[0]._id },
{ word: 'destructuring', scrambled: 'ertutgcsrdnui', solution: 'destructuring', topic: topics[0]._id },
{ word: 'template', scrambled: 'teapmelt', solution: 'template', topic: topics[0]._id },
{ word: 'literal', scrambled: 'laeitrl', solution: 'literal', topic: topics[0]._id },
{ word: 'tagged', scrambled: 'tegdga', solution: 'tagged', topic: topics[0]._id },
{ word: 'expression', scrambled: 'xiesnproes', solution: 'expression', topic: topics[0]._id },
{ word: 'statement', scrambled: 'ttmnatese', solution: 'statement', topic: topics[0]._id },
{ word: 'block', scrambled: 'lbock', solution: 'block', topic: topics[0]._id },
{ word: 'eval', scrambled: 'alev', solution: 'eval', topic: topics[0]._id },
{ word: 'interpreter', scrambled: 'treeeprrtni', solution: 'interpreter', topic: topics[0]._id },
{ word: 'compiler', scrambled: 'rmiecpol', solution: 'compiler', topic: topics[0]._id },
{ word: 'engine', scrambled: 'eignen', solution: 'engine', topic: topics[0]._id },
{ word: 'v8', scrambled: '8v', solution: 'v8', topic: topics[0]._id },
{ word: 'spider monkey', scrambled: 'romspynieedk', solution: 'spider monkey', topic: topics[0]._id },
{ word: 'chakra', scrambled: 'hrkaac', solution: 'chakra', topic: topics[0]._id },
{ word: 'event', scrambled: 'vntee', solution: 'event', topic: topics[0]._id },
{ word: 'listener', scrambled: 'trleines', solution: 'listener', topic: topics[0]._id },
{ word: 'handler', scrambled: 'naherdl', solution: 'handler', topic: topics[0]._id },
{ word: 'queue', scrambled: 'ueque', solution: 'queue', topic: topics[0]._id },
{ word: 'stack', scrambled: 'kstca', solution: 'stack', topic: topics[0]._id },
{ word: 'heap', scrambled: 'haep', solution: 'heap', topic: topics[0]._id },
{ word: 'memory', scrambled: 'ommery', solution: 'memory', topic: topics[0]._id },
{ word: 'reference', scrambled: 'rneecfere', solution: 'reference', topic: topics[0]._id },
{ word: 'value', scrambled: 'value', solution: 'value', topic: topics[0]._id },
{ word: 'copy', scrambled: 'yocp', solution: 'copy', topic: topics[0]._id },
{ word: 'deep', scrambled: 'epde', solution: 'deep', topic: topics[0]._id },
{ word: 'shallow', scrambled: 'wsollah', solution: 'shallow', topic: topics[0]._id },
{ word: 'immutable', scrambled: 'bautlmime', solution: 'immutable', topic: topics[0]._id },
{ word: 'mutable', scrambled: 'amltueb', solution: 'mutable', topic: topics[0]._id },
{ word: 'dom', scrambled: 'dmo', solution: 'dom', topic: topics[0]._id },
{ word: 'document', scrambled: 'ctuodenm', solution: 'document', topic: topics[0]._id },
{ word: 'window', scrambled: 'wdnwio', solution: 'window', topic: topics[0]._id },
{ word: 'navigator', scrambled: 'vgranatoi', solution: 'navigator', topic: topics[0]._id },
{ word: 'location', scrambled: 'nioaclto', solution: 'location', topic: topics[0]._id },
{ word: 'history', scrambled: 'hotrsiy', solution: 'history', topic: topics[0]._id },
{ word: 'cookie', scrambled: 'okocei', solution: 'cookie', topic: topics[0]._id },
{ word: 'storage', scrambled: 'tsaoerg', solution: 'storage', topic: topics[0]._id },
{ word: 'localstorage', scrambled: 'loorcetasgal', solution: 'localstorage', topic: topics[0]._id },
{ word: 'sessionstorage', scrambled: 'saeenogrsossti', solution: 'sessionstorage', topic: topics[0]._id },
{ word: 'fetch', scrambled: 'ctefh', solution: 'fetch', topic: topics[0]._id },
{ word: 'axios', scrambled: 'soiax', solution: 'axios', topic: topics[0]._id },
{ word: 'xhr', scrambled: 'rxh', solution: 'xhr', topic: topics[0]._id },
{ word: 'request', scrambled: 'eresqtu', solution: 'request', topic: topics[0]._id },
{ word: 'response', scrambled: 'eponsers', solution: 'response', topic: topics[0]._id },
{ word: 'status', scrambled: 'susatt', solution: 'status', topic: topics[0]._id },
{ word: 'header', scrambled: 'deeahr', solution: 'header', topic: topics[0]._id },
{ word: 'api', scrambled: 'iap', solution: 'api', topic: topics[0]._id },
{ word: 'graphql', scrambled: 'lrhqagp', solution: 'graphql', topic: topics[0]._id },
{ word: 'websocket', scrambled: 'tebwsceok', solution: 'websocket', topic: topics[0]._id },
{ word: 'socket', scrambled: 'okscte', solution: 'socket', topic: topics[0]._id },
{ word: 'realtime', scrambled: 'ieemlrat', solution: 'realtime', topic: topics[0]._id },
{ word: 'middleware', scrambled: 'aelmridwde', solution: 'middleware', topic: topics[0]._id },
{ word: 'router', scrambled: 'rrutoe', solution: 'router', topic: topics[0]._id },
{ word: 'route', scrambled: 'eortu', solution: 'route', topic: topics[0]._id },
{ word: 'express', scrambled: 'eerpxss', solution: 'express', topic: topics[0]._id },
{ word: 'server', scrambled: 'rsever', solution: 'server', topic: topics[0]._id },
{ word: 'client', scrambled: 'tlince', solution: 'client', topic: topics[0]._id },
{ word: 'frontend', scrambled: 'orndtfne', solution: 'frontend', topic: topics[0]._id },
{ word: 'backend', scrambled: 'akbdecn', solution: 'backend', topic: topics[0]._id },
{ word: 'fullstack', scrambled: 'tklsflacu', solution: 'fullstack', topic: topics[0]._id },
{ word: 'mvc', scrambled: 'vcm', solution: 'mvc', topic: topics[0]._id },
{ word: 'mvvm', scrambled: 'vvmm', solution: 'mvvm', topic: topics[0]._id },
{ word: 'spa', scrambled: 'aps', solution: 'spa', topic: topics[0]._id },
{ word: 'ssr', scrambled: 'ssr', solution: 'ssr', topic: topics[0]._id },
{ word: 'csr', scrambled: 'csr', solution: 'csr', topic: topics[0]._id },
{ word: 'hydrate', scrambled: 'radthey', solution: 'hydrate', topic: topics[0]._id },
{ word: 'render', scrambled: 'rnerde', solution: 'render', topic: topics[0]._id },
{ word: 'component', scrambled: 'tmepcnoon', solution: 'component', topic: topics[0]._id },
{ word: 'state', scrambled: 'esatt', solution: 'state', topic: topics[0]._id },
{ word: 'props', scrambled: 'poprs', solution: 'props', topic: topics[0]._id },
{ word: 'hook', scrambled: 'hkoo', solution: 'hook', topic: topics[0]._id },
{ word: 'effect', scrambled: 'eftcfe', solution: 'effect', topic: topics[0]._id },
{ word: 'ref', scrambled: 'erf', solution: 'ref', topic: topics[0]._id },
{ word: 'memo', scrambled: 'oemm', solution: 'memo', topic: topics[0]._id },
{ word: 'reducer', scrambled: 'crerude', solution: 'reducer', topic: topics[0]._id },
{ word: 'dispatch', scrambled: 'ashtpdic', solution: 'dispatch', topic: topics[0]._id },
{ word: 'action', scrambled: 'acinot', solution: 'action', topic: topics[0]._id },
{ word: 'store', scrambled: 'ortes', solution: 'store', topic: topics[0]._id },
{ word: 'redux', scrambled: 'uxrde', solution: 'redux', topic: topics[0]._id },
{ word: 'saga', scrambled: 'asga', solution: 'saga', topic: topics[0]._id },
{ word: 'thunk', scrambled: 'knuht', solution: 'thunk', topic: topics[0]._id },
{ word: 'recoil', scrambled: 'liroce', solution: 'recoil', topic: topics[0]._id },
{ word: 'zustand', scrambled: 'asdnzut', solution: 'zustand', topic: topics[0]._id },
{ word: 'observable', scrambled: 'bvsreoleba', solution: 'observable', topic: topics[0]._id },
{ word: 'rxjs', scrambled: 'jxrs', solution: 'rxjs', topic: topics[0]._id },
{ word: 'subject', scrambled: 'uebtjsc', solution: 'subject', topic: topics[0]._id },
{ word: 'operator', scrambled: 'aorterop', solution: 'operator', topic: topics[0]._id },
{ word: 'pipe', scrambled: 'eipp', solution: 'pipe', topic: topics[0]._id },
{ word: 'subscribe', scrambled: 'sbebscrui', solution: 'subscribe', topic: topics[0]._id },
{ word: 'unsubscribe', scrambled: 'brsiuuebcns', solution: 'unsubscribe', topic: topics[0]._id },
{ word: 'life cycle', scrambled: 'iceelclfy', solution: 'life cycle', topic: topics[0]._id },
{ word: 'mount', scrambled: 'tumno', solution: 'mount', topic: topics[0]._id },
{ word: 'update', scrambled: 'utdaep', solution: 'update', topic: topics[0]._id },
{ word: 'unmount', scrambled: 'nuonmtu', solution: 'unmount', topic: topics[0]._id },
{ word: 'jsx', scrambled: 'sjx', solution: 'jsx', topic: topics[0]._id },
{ word: 'tsx', scrambled: 'txs', solution: 'tsx', topic: topics[0]._id },
{ word: 'typescript', scrambled: 'itprpecsty', solution: 'typescript', topic: topics[0]._id },
{ word: 'interface', scrambled: 'erteniafc', solution: 'interface', topic: topics[0]._id },
{ word: 'type', scrambled: 'yetp', solution: 'type', topic: topics[0]._id },
{ word: 'enum', scrambled: 'uemn', solution: 'enum', topic: topics[0]._id },
{ word: 'generic', scrambled: 'ncergei', solution: 'generic', topic: topics[0]._id },
{ word: 'tsconfig', scrambled: 'niftgosc', solution: 'tsconfig', topic: topics[0]._id },
{ word: 'strict', scrambled: 'ctrsti', solution: 'strict', topic: topics[0]._id },
{ word: 'any', scrambled: 'nay', solution: 'any', topic: topics[0]._id },
{ word: 'unknown', scrambled: 'nnkwuon', solution: 'unknown', topic: topics[0]._id },
{ word: 'never', scrambled: 'eervn', solution: 'never', topic: topics[0]._id },
{ word: 'void', scrambled: 'ivdo', solution: 'void', topic: topics[0]._id },
{ word: 'key of', scrambled: 'kfeyo', solution: 'key of', topic: topics[0]._id },
{ word: 'extends', scrambled: 'neexdst', solution: 'extends', topic: topics[0]._id },
{ word: 'infer', scrambled: 'fiern', solution: 'infer', topic: topics[0]._id },
{ word: 'as', scrambled: 'sa', solution: 'as', topic: topics[0]._id },
{ word: 'const', scrambled: 'scnto', solution: 'const', topic: topics[0]._id },

// React
{ word: 'react', scrambled: 'raetc', solution: 'react', topic: topics[1]._id },
{ word: 'component', scrambled: 'enomctpno', solution: 'component', topic: topics[1]._id },
{ word: 'state', scrambled: 'tsaet', solution: 'state', topic: topics[1]._id },
{ word: 'props', scrambled: 'ppros', solution: 'props', topic: topics[1]._id },
{ word: 'hook', scrambled: 'ookh', solution: 'hook', topic: topics[1]._id },
{ word: 'effect', scrambled: 'teffce', solution: 'effect', topic: topics[1]._id },
{ word: 'context', scrambled: 'tcxoten', solution: 'context', topic: topics[1]._id },
{ word: 'ref', scrambled: 'efr', solution: 'ref', topic: topics[1]._id },
{ word: 'memo', scrambled: 'omem', solution: 'memo', topic: topics[1]._id },
{ word: 'reducer', scrambled: 'uredrce', solution: 'reducer', topic: topics[1]._id },
{ word: 'dispatch', scrambled: 'phscaitd', solution: 'dispatch', topic: topics[1]._id },
{ word: 'render', scrambled: 'ernedr', solution: 'render', topic: topics[1]._id },
{ word: 'jsx', scrambled: 'jxs', solution: 'jsx', topic: topics[1]._id },
{ word: 'tsx', scrambled: 'sxt', solution: 'tsx', topic: topics[1]._id },
{ word: 'virtualdom', scrambled: 'lovratiumd', solution: 'virtualdom', topic: topics[1]._id },
{ word: 'fragment', scrambled: 'nemfatgr', solution: 'fragment', topic: topics[1]._id },
{ word: 'portal', scrambled: 'tlpaor', solution: 'portal', topic: topics[1]._id },
{ word: 'suspense', scrambled: 'spsnesue', solution: 'suspense', topic: topics[1]._id },
{ word: 'lazy', scrambled: 'ayzl', solution: 'lazy', topic: topics[1]._id },
{ word: 'error boundary', scrambled: 'barrrdyonruoe', solution: 'error boundary', topic: topics[1]._id },
{ word: 'useEffect', scrambled: 'ufecsfeet', solution: 'useEffect', topic: topics[1]._id },
{ word: 'useState', scrambled: 'tessutea', solution: 'useState', topic: topics[1]._id },
{ word: 'useContext', scrambled: 'tetscxnoeu', solution: 'useContext', topic: topics[1]._id },
{ word: 'useRef', scrambled: 'ufseer', solution: 'useRef', topic: topics[1]._id },
{ word: 'useMemo', scrambled: 'ummseeo', solution: 'useMemo', topic: topics[1]._id },
{ word: 'useCallback', scrambled: 'lcalckusaeb', solution: 'useCallback', topic: topics[1]._id },
{ word: 'useReducer', scrambled: 'eedcueursr', solution: 'useReducer', topic: topics[1]._id },
{ word: 'custom hook', scrambled: 'hokosmcuto', solution: 'custom hook', topic: topics[1]._id },
{ word: 'controlled', scrambled: 'olecroltdn', solution: 'controlled', topic: topics[1]._id },
{ word: 'uncontrolled', scrambled: 'lturdoeocnnl', solution: 'uncontrolled', topic: topics[1]._id },
{ word: 'life cycle', scrambled: 'cfliylcee', solution: 'life cycle', topic: topics[1]._id },
{ word: 'mount', scrambled: 'tnmou', solution: 'mount', topic: topics[1]._id },
{ word: 'unmount', scrambled: 'mnouunt', solution: 'unmount', topic: topics[1]._id },
{ word: 'update', scrambled: 'eapudt', solution: 'update', topic: topics[1]._id },
{ word: 'pure component', scrambled: 'pnuoeotcprmne', solution: 'pure component', topic: topics[1]._id },
{ word: 'class component', scrambled: 'sctpmnoaonlsec', solution: 'class component', topic: topics[1]._id },
{ word: 'functional component', scrambled: 'tctomflcennpiuannoo', solution: 'functional component', topic: topics[1]._id },
{ word: 'stateless', scrambled: 'stsletsea', solution: 'stateless', topic: topics[1]._id },
{ word: 'reconciliation', scrambled: 'niecorncitlioa', solution: 'reconciliation', topic: topics[1]._id },
{ word: 'diffing', scrambled: 'dgniiff', solution: 'diffing', topic: topics[1]._id },
{ word: 'keys', scrambled: 'keys', solution: 'keys', topic: topics[1]._id },
{ word: 'children', scrambled: 'neridlhc', solution: 'children', topic: topics[1]._id },
{ word: 'props drilling', scrambled: 'gipilpdosnrlr', solution: 'props drilling', topic: topics[1]._id },
{ word: 'lifting state', scrambled: 'nfglstititea', solution: 'lifting state', topic: topics[1]._id },
{ word: 'composition', scrambled: 'istomipoonc', solution: 'composition', topic: topics[1]._id },
{ word: 'hoc', scrambled: 'ohc', solution: 'hoc', topic: topics[1]._id },
{ word: 'render props', scrambled: 'prerropdsne', solution: 'render props', topic: topics[1]._id },
{ word: 'propTypes', scrambled: 'psTprepyo', solution: 'propTypes', topic: topics[1]._id },
{ word: 'default props', scrambled: 'oratdsplfpue', solution: 'default props', topic: topics[1]._id },
{ word: 'forwardRef', scrambled: 'fdrreawrof', solution: 'forwardRef', topic: topics[1]._id },
{ word: 'createContext', scrambled: 'etoctetexncar', solution: 'createContext', topic: topics[1]._id },
{ word: 'provider', scrambled: 'pverriod', solution: 'provider', topic: topics[1]._id },
{ word: 'consumer', scrambled: 'sonrceum', solution: 'consumer', topic: topics[1]._id },
{ word: 'cloneElement', scrambled: 'nellmnceteeo', solution: 'cloneElement', topic: topics[1]._id },
{ word: 'strict mode', scrambled: 'ttocdserim', solution: 'strict mode', topic: topics[1]._id },
{ word: 'concurrent', scrambled: 'tcrencnruo', solution: 'concurrent', topic: topics[1]._id },
{ word: 'hydration', scrambled: 'yaothrdin', solution: 'hydration', topic: topics[1]._id },
{ word: 'ssr', scrambled: 'ssr', solution: 'ssr', topic: topics[1]._id },
{ word: 'csr', scrambled: 'src', solution: 'csr', topic: topics[1]._id },
{ word: 'spa', scrambled: 'spa', solution: 'spa', topic: topics[1]._id },
{ word: 'router', scrambled: 'erutor', solution: 'router', topic: topics[1]._id },
{ word: 'route', scrambled: 'eoutr', solution: 'route', topic: topics[1]._id },
{ word: 'link', scrambled: 'knli', solution: 'link', topic: topics[1]._id },
{ word: 'navlink', scrambled: 'kaninvl', solution: 'navlink', topic: topics[1]._id },
{ word: 'outlet', scrambled: 'utotle', solution: 'outlet', topic: topics[1]._id },
{ word: 'switch', scrambled: 'hitwcs', solution: 'switch', topic: topics[1]._id },
{ word: 'navigate', scrambled: 'vetigana', solution: 'navigate', topic: topics[1]._id },
{ word: 'history', scrambled: 'rtsoiyh', solution: 'history', topic: topics[1]._id },
{ word: 'location', scrambled: 'ontioalc', solution: 'location', topic: topics[1]._id },
{ word: 'params', scrambled: 'asmrap', solution: 'params', topic: topics[1]._id },
{ word: 'match', scrambled: 'mthac', solution: 'match', topic: topics[1]._id },
{ word: 'nested routes', scrambled: 'eesotrtnduse', solution: 'nested routes', topic: topics[1]._id },
{ word: 'redirect', scrambled: 'eectrrid', solution: 'redirect', topic: topics[1]._id },
{ word: 'useParams', scrambled: 'saaepumrs', solution: 'useParams', topic: topics[1]._id },
{ word: 'useNavigate', scrambled: 'ientgavseau', solution: 'useNavigate', topic: topics[1]._id },
{ word: 'useLocation', scrambled: 'eaosutcilno', solution: 'useLocation', topic: topics[1]._id },
{ word: 'useRoutes', scrambled: 'rutssuoee', solution: 'useRoutes', topic: topics[1]._id },
{ word: 'layout', scrambled: 'loatuy', solution: 'layout', topic: topics[1]._id },
{ word: 'navigation', scrambled: 'tnoingviaa', solution: 'navigation', topic: topics[1]._id },
{ word: 'accessibility', scrambled: 'leictsascibyi', solution: 'accessibility', topic: topics[1]._id },
{ word: 'animation', scrambled: 'omaatniin', solution: 'animation', topic: topics[1]._id },
{ word: 'transition', scrambled: 'taostrnnii', solution: 'transition', topic: topics[1]._id },
{ word: 'styled components', scrambled: 'mldcneosetynstpo', solution: 'styled components', topic: topics[1]._id },
{ word: 'emotion', scrambled: 'mnooite', solution: 'emotion', topic: topics[1]._id },
{ word: 'tailwind', scrambled: 'tilandiw', solution: 'tailwind', topic: topics[1]._id },
{ word: 'class names', scrambled: 'enmssaclsa', solution: 'class names', topic: topics[1]._id },
{ word: 'css modules', scrambled: 'sueosmlscd', solution: 'css modules', topic: topics[1]._id },
{ word: 'bem', scrambled: 'bem', solution: 'bem', topic: topics[1]._id },
{ word: 'theming', scrambled: 'igtnhme', solution: 'theming', topic: topics[1]._id },
{ word: 'dark mode', scrambled: 'kdadermo', solution: 'dark mode', topic: topics[1]._id },
{ word: 'performance', scrambled: 'ramfrceopen', solution: 'performance', topic: topics[1]._id },
{ word: 'memoization', scrambled: 'menziiamoot', solution: 'memoization', topic: topics[1]._id },
{ word: 'optimization', scrambled: 'otzoinitmpai', solution: 'optimization', topic: topics[1]._id },
{ word: 'profiling', scrambled: 'gnilofpir', solution: 'profiling', topic: topics[1]._id },
{ word: 'concurrent mode', scrambled: 'onmetercrndouc', solution: 'concurrent mode', topic: topics[1]._id },
{ word: 'startTransition', scrambled: 'rrsttionsaintta', solution: 'startTransition', topic: topics[1]._id },
{ word: 'suspense boundary', scrambled: 'peseuousnadybrns', solution: 'suspense boundary', topic: topics[1]._id },
{ word: 'code splitting', scrambled: 'teoitndigclSp', solution: 'code splitting', topic: topics[1]._id },
{ word: 'lazy loading', scrambled: 'aioaydgnzll', solution: 'lazy loading', topic: topics[1]._id },
{ word: 'tree shaking', scrambled: 'rnekatShige', solution: 'tree shaking', topic: topics[1]._id },
{ word: 'devTools', scrambled: 'delstvoo', solution: 'devTools', topic: topics[1]._id },
{ word: 'hot reload', scrambled: 'dohtraloe', solution: 'hot reload', topic: topics[1]._id },
{ word: 'fast refresh', scrambled: 'sefarfshtre', solution: 'fast refresh', topic: topics[1]._id },
{ word: 'createReactApp', scrambled: 'pAetpercaRceat', solution: 'createReactApp', topic: topics[1]._id },
{ word: 'vite', scrambled: 'evti', solution: 'vite', topic: topics[1]._id },
{ word: 'webpack', scrambled: 'pcwabek', solution: 'webpack', topic: topics[1]._id },
{ word: 'babel', scrambled: 'lbbea', solution: 'babel', topic: topics[1]._id },
{ word: 'ESlint', scrambled: 'sntile', solution: 'ESlint', topic: topics[1]._id },
{ word: 'prettier', scrambled: 'irptetre', solution: 'prettier', topic: topics[1]._id },
{ word: 'testing library', scrambled: 'sitabertngriyl', solution: 'testing library', topic: topics[1]._id },
{ word: 'jest', scrambled: 'stej', solution: 'jest', topic: topics[1]._id },
{ word: 'cypress', scrambled: 'cspsrey', solution: 'cypress', topic: topics[1]._id },
{ word: 'enzyme', scrambled: 'ynemze', solution: 'enzyme', topic: topics[1]._id },
{ word: 'mocking', scrambled: 'ionmgck', solution: 'mocking', topic: topics[1]._id },
{ word: 'snapshot', scrambled: 'tshoapns', solution: 'snapshot', topic: topics[1]._id },
{ word: 'coverage', scrambled: 'vgacreeo', solution: 'coverage', topic: topics[1]._id },
{ word: 'integration', scrambled: 'riogannttei', solution: 'integration', topic: topics[1]._id },
{ word: 'unit', scrambled: 'nuti', solution: 'unit', topic: topics[1]._id },
{ word: 'e2e', scrambled: '2ee', solution: 'e2e', topic: topics[1]._id },
{ word: 'async await', scrambled: 'wsiaaatncy', solution: 'async await', topic: topics[1]._id },
{ word: 'error handling', scrambled: 'giaorhrrnelnd', solution: 'error handling', topic: topics[1]._id },
{ word: 'boundary', scrambled: 'dayonbur', solution: 'boundary', topic: topics[1]._id },
{ word: 'fallback', scrambled: 'kclaaflb', solution: 'fallback', topic: topics[1]._id },
{ word: 'trycatch', scrambled: 'achrctyt', solution: 'trycatch', topic: topics[1]._id },
{ word: 'toast', scrambled: 'attos', solution: 'toast', topic: topics[1]._id },
{ word: 'notification', scrambled: 'fnoctiaiotin', solution: 'notification', topic: topics[1]._id },
{ word: 'modal', scrambled: 'mdloa', solution: 'modal', topic: topics[1]._id },
{ word: 'dialog', scrambled: 'loidga', solution: 'dialog', topic: topics[1]._id },
{ word: 'overlay', scrambled: 'eayrolv', solution: 'overlay', topic: topics[1]._id },
{ word: 'form', scrambled: 'fmor', solution: 'form', topic: topics[1]._id },
{ word: 'formik', scrambled: 'mrfkoi', solution: 'formik', topic: topics[1]._id },
{ word: 'react hook form', scrambled: 'haomrcfotkroe', solution: 'react hook form', topic: topics[1]._id },
{ word: 'validation', scrambled: 'aotdiavnli', solution: 'validation', topic: topics[1]._id },
{ word: 'input', scrambled: 'piutn', solution: 'input', topic: topics[1]._id },
{ word: 'textarea', scrambled: 'etxraate', solution: 'textarea', topic: topics[1]._id },
{ word: 'select', scrambled: 'cseetl', solution: 'select', topic: topics[1]._id },
{ word: 'checkbox', scrambled: 'bcxohcke', solution: 'checkbox', topic: topics[1]._id },
{ word: 'radio', scrambled: 'daoir', solution: 'radio', topic: topics[1]._id },
{ word: 'submit', scrambled: 'usmtbi', solution: 'submit', topic: topics[1]._id },
{ word: 'reset', scrambled: 'esert', solution: 'reset', topic: topics[1]._id },
{ word: 'event', scrambled: 'tvene', solution: 'event', topic: topics[1]._id },
{ word: 'synthetic event', scrambled: 'cehnseytvtinet', solution: 'synthetic event', topic: topics[1]._id },
{ word: 'onChange', scrambled: 'cnaghnoe', solution: 'onChange', topic: topics[1]._id },
{ word: 'onClick', scrambled: 'inlkcoc', solution: 'onClick', topic: topics[1]._id },
{ word: 'onSubmit', scrambled: 'inosbutm', solution: 'onSubmit', topic: topics[1]._id },
{ word: 'onInput', scrambled: 'upintno', solution: 'onInput', topic: topics[1]._id },
{ word: 'bubbling', scrambled: 'nlbbubgi', solution: 'bubbling', topic: topics[1]._id },
{ word: 'capturing', scrambled: 'rtgcnaupi', solution: 'capturing', topic: topics[1]._id },
{ word: 'delegation', scrambled: 'eeoaitgdln', solution: 'delegation', topic: topics[1]._id },
{ word: 'binding', scrambled: 'ndiibng', solution: 'binding', topic: topics[1]._id },
{ word: 'arrow function', scrambled: 'fwnnirtuaorco', solution: 'arrow function', topic: topics[1]._id },
{ word: 'fat arrow', scrambled: 'tfawoarr', solution: 'fat arrow', topic: topics[1]._id },
{ word: 'callback ref', scrambled: 'elrafclbkac', solution: 'callback ref', topic: topics[1]._id },
{ word: 'dom ref', scrambled: 'emdorf', solution: 'dom ref', topic: topics[1]._id },
{ word: 'focus', scrambled: 'fsuoc', solution: 'focus', topic: topics[1]._id },
{ word: 'blur', scrambled: 'lrbu', solution: 'blur', topic: topics[1]._id },
{ word: 'custom component', scrambled: 'cncooeosptnmtmu', solution: 'custom component', topic: topics[1]._id },
{ word: 'container', scrambled: 'ntnecoair', solution: 'container', topic: topics[1]._id },
{ word: 'presentational', scrambled: 'taenasltnpoeir', solution: 'presentational', topic: topics[1]._id },
{ word: 'separation', scrambled: 'seiatpoarn', solution: 'separation', topic: topics[1]._id },
{ word: 'pattern', scrambled: 'nttarpe', solution: 'pattern', topic: topics[1]._id },
{ word: 'architecture', scrambled: 'ttcaehrcurei', solution: 'architecture', topic: topics[1]._id },
{ word: 'clean code', scrambled: 'oledcneaC', solution: 'clean code', topic: topics[1]._id },
{ word: 'abstraction', scrambled: 'rbtnsaoitac', solution: 'abstraction', topic: topics[1]._id },
{ word: 'encapsulation', scrambled: 'iuntpoeasalnc', solution: 'encapsulation', topic: topics[1]._id },
{ word: 'modularity', scrambled: 'dtamuiyrlo', solution: 'modularity', topic: topics[1]._id },
{ word: 'reusability', scrambled: 'tbaurilesiy', solution: 'reusability', topic: topics[1]._id },
{ word: 'composition api', scrambled: 'ptoaiciposomin', solution: 'composition api', topic: topics[1]._id },
{ word: 'plugin', scrambled: 'gnpuil', solution: 'plugin', topic: topics[1]._id },
{ word: 'extension', scrambled: 'tsxoennei', solution: 'extension', topic: topics[1]._id },
{ word: 'debugging', scrambled: 'ggbienudg', solution: 'debugging', topic: topics[1]._id },
{ word: 'console', scrambled: 'slenoco', solution: 'console', topic: topics[1]._id },
{ word: 'log', scrambled: 'log', solution: 'log', topic: topics[1]._id },
{ word: 'warn', scrambled: 'nraw', solution: 'warn', topic: topics[1]._id },
{ word: 'error', scrambled: 'orrer', solution: 'error', topic: topics[1]._id },
{ word: 'network', scrambled: 'ewntkro', solution: 'network', topic: topics[1]._id },
{ word: 'inspector', scrambled: 'orecsnipt', solution: 'inspector', topic: topics[1]._id },
{ word: 'breakpoint', scrambled: 'teanrbiopk', solution: 'breakpoint', topic: topics[1]._id },
{ word: 'call stack', scrambled: 'tlasaclck', solution: 'call stack', topic: topics[1]._id },
{ word: 'watch', scrambled: 'hcwat', solution: 'watch', topic: topics[1]._id },
{ word: 'redux', scrambled: 'xrude', solution: 'redux', topic: topics[1]._id },
{ word: 'context api', scrambled: 'acntxetipo', solution: 'context api', topic: topics[1]._id },
{ word: 'recoil', scrambled: 'celoir', solution: 'recoil', topic: topics[1]._id },
{ word: 'zustand', scrambled: 'adsntzu', solution: 'zustand', topic: topics[1]._id },
{ word: 'mobX', scrambled: 'mxob', solution: 'mobX', topic: topics[1]._id },
{ word: 'flux', scrambled: 'lfux', solution: 'flux', topic: topics[1]._id },
{ word: 'store', scrambled: 'oerst', solution: 'store', topic: topics[1]._id },
{ word: 'action', scrambled: 'itncao', solution: 'action', topic: topics[1]._id },
{ word: 'middleware', scrambled: 'wdaimdlere', solution: 'middleware', topic: topics[1]._id },

// Node.js
{ word: 'node', scrambled: 'ndeo', solution: 'node', topic: topics[2]._id },
{ word: 'event loop', scrambled: 'oetlevonp', solution: 'event loop', topic: topics[2]._id },
{ word: 'non blocking', scrambled: 'ncnnkiglboo', solution: 'non blocking', topic: topics[2]._id },
{ word: 'asynchronous', scrambled: 'nsorouchnysa', solution: 'asynchronous', topic: topics[2]._id },
{ word: 'callback', scrambled: 'allabkcc', solution: 'callback', topic: topics[2]._id },
{ word: 'promise', scrambled: 'pesimro', solution: 'promise', topic: topics[2]._id },
{ word: 'async', scrambled: 'yncas', solution: 'async', topic: topics[2]._id },
{ word: 'await', scrambled: 'aiwta', solution: 'await', topic: topics[2]._id },
{ word: 'http', scrambled: 'htpt', solution: 'http', topic: topics[2]._id },
{ word: 'https', scrambled: 'ptths', solution: 'https', topic: topics[2]._id },
{ word: 'fs', scrambled: 'sf', solution: 'fs', topic: topics[2]._id },
{ word: 'path', scrambled: 'athp', solution: 'path', topic: topics[2]._id },
{ word: 'url', scrambled: 'ulr', solution: 'url', topic: topics[2]._id },
{ word: 'stream', scrambled: 'tearms', solution: 'stream', topic: topics[2]._id },
{ word: 'buffer', scrambled: 'erbuff', solution: 'buffer', topic: topics[2]._id },
{ word: 'process', scrambled: 'sceposr', solution: 'process', topic: topics[2]._id },
{ word: 'child process', scrambled: 'risscoelcpdh', solution: 'child process', topic: topics[2]._id },
{ word: 'cluster', scrambled: 'creulst', solution: 'cluster', topic: topics[2]._id },
{ word: 'worker', scrambled: 'eowrkr', solution: 'worker', topic: topics[2]._id },
{ word: 'thread', scrambled: 'edtarh', solution: 'thread', topic: topics[2]._id },
{ word: 'module', scrambled: 'lumoed', solution: 'module', topic: topics[2]._id },
{ word: 'exports', scrambled: 'estorpx', solution: 'exports', topic: topics[2]._id },
{ word: 'require', scrambled: 'qreriue', solution: 'require', topic: topics[2]._id },
{ word: 'commonJS', scrambled: 'cmsnmjoo', solution: 'commonJS', topic: topics[2]._id },
{ word: 'esm', scrambled: 'esm', solution: 'esm', topic: topics[2]._id },
{ word: 'import', scrambled: 'miorpt', solution: 'import', topic: topics[2]._id },
{ word: 'export', scrambled: 'perxot', solution: 'export', topic: topics[2]._id },
{ word: 'global', scrambled: 'bglaol', solution: 'global', topic: topics[2]._id },
{ word: 'dir name', scrambled: 'rnemadi', solution: 'dir name', topic: topics[2]._id },
{ word: 'file name', scrambled: 'eanmiefl', solution: 'file name', topic: topics[2]._id },
{ word: 'package', scrambled: 'kpcaeag', solution: 'package', topic: topics[2]._id },
{ word: 'json', scrambled: 'onsj', solution: 'json', topic: topics[2]._id },
{ word: 'npm', scrambled: 'npm', solution: 'npm', topic: topics[2]._id },
{ word: 'yarn', scrambled: 'ryna', solution: 'yarn', topic: topics[2]._id },
{ word: 'npx', scrambled: 'nxp', solution: 'npx', topic: topics[2]._id },
{ word: 'init', scrambled: 'ntii', solution: 'init', topic: topics[2]._id },
{ word: 'install', scrambled: 'llnasti', solution: 'install', topic: topics[2]._id },
{ word: 'uninstall', scrambled: 'alstunlin', solution: 'uninstall', topic: topics[2]._id },
{ word: 'dependency', scrambled: 'pnceddeyne', solution: 'dependency', topic: topics[2]._id },
{ word: 'dev dependency', scrambled: 'yvpeedeecdndn', solution: 'dev dependency', topic: topics[2]._id },
{ word: 'version', scrambled: 'osevinr', solution: 'version', topic: topics[2]._id },
{ word: 'scripts', scrambled: 'sirctsp', solution: 'scripts', topic: topics[2]._id },
{ word: 'start', scrambled: 'ratst', solution: 'start', topic: topics[2]._id },
{ word: 'build', scrambled: 'biuld', solution: 'build', topic: topics[2]._id },
{ word: 'test', scrambled: 'stet', solution: 'test', topic: topics[2]._id },
{ word: 'nodemon', scrambled: 'dnoonem', solution: 'nodemon', topic: topics[2]._id },
{ word: 'concurrently', scrambled: 'locturnyencr', solution: 'concurrently', topic: topics[2]._id },
{ word: 'cross env', scrambled: 'oesscvnr', solution: 'cross env', topic: topics[2]._id },
{ word: 'dotenv', scrambled: 'vntedo', solution: 'dotenv', topic: topics[2]._id },
{ word: 'config', scrambled: 'nfogci', solution: 'config', topic: topics[2]._id },
{ word: 'env', scrambled: 'nve', solution: 'env', topic: topics[2]._id },
{ word: 'port', scrambled: 'tpro', solution: 'port', topic: topics[2]._id },
{ word: 'server', scrambled: 'verrse', solution: 'server', topic: topics[2]._id },
{ word: 'client', scrambled: 'cnitle', solution: 'client', topic: topics[2]._id },
{ word: 'request', scrambled: 'qteures', solution: 'request', topic: topics[2]._id },
{ word: 'response', scrambled: 'opensres', solution: 'response', topic: topics[2]._id },
{ word: 'status', scrambled: 'usttsa', solution: 'status', topic: topics[2]._id },
{ word: 'header', scrambled: 'heread', solution: 'header', topic: topics[2]._id },
{ word: 'middleware', scrambled: 'aeeidmdrwl', solution: 'middleware', topic: topics[2]._id },
{ word: 'router', scrambled: 'eorurt', solution: 'router', topic: topics[2]._id },
{ word: 'express', scrambled: 'erssexp', solution: 'express', topic: topics[2]._id },
{ word: 'app', scrambled: 'app', solution: 'app', topic: topics[2]._id },
{ word: 'route', scrambled: 'ouetr', solution: 'route', topic: topics[2]._id },
{ word: 'handler', scrambled: 'relndha', solution: 'handler', topic: topics[2]._id },
{ word: 'endpoint', scrambled: 'tidpenon', solution: 'endpoint', topic: topics[2]._id },
{ word: 'body parser', scrambled: 'yearpodbsr', solution: 'body parser', topic: topics[2]._id },
{ word: 'cors', scrambled: 'rcos', solution: 'cors', topic: topics[2]._id },
{ word: 'helmet', scrambled: 'ehltme', solution: 'helmet', topic: topics[2]._id },
{ word: 'morgan', scrambled: 'agnomr', solution: 'morgan', topic: topics[2]._id },
{ word: 'cookie parser', scrambled: 'coeiroskerpa', solution: 'cookie parser', topic: topics[2]._id },
{ word: 'session', scrambled: 'oisesns', solution: 'session', topic: topics[2]._id },
{ word: 'auth', scrambled: 'haut', solution: 'auth', topic: topics[2]._id },
{ word: 'jwt', scrambled: 'jtw', solution: 'jwt', topic: topics[2]._id },
{ word: 'token', scrambled: 'enokt', solution: 'token', topic: topics[2]._id },
{ word: 'bcrypt', scrambled: 'bcrytp', solution: 'bcrypt', topic: topics[2]._id },
{ word: 'salt', scrambled: 'aslt', solution: 'salt', topic: topics[2]._id },
{ word: 'hash', scrambled: 'ahsh', solution: 'hash', topic: topics[2]._id },
{ word: 'signup', scrambled: 'nugisp', solution: 'signup', topic: topics[2]._id },
{ word: 'signin', scrambled: 'insnig', solution: 'signin', topic: topics[2]._id },
{ word: 'logout', scrambled: 'touogl', solution: 'logout', topic: topics[2]._id },
{ word: 'database', scrambled: 'atdasabe', solution: 'database', topic: topics[2]._id },
{ word: 'mongodb', scrambled: 'gomdbno', solution: 'mongodb', topic: topics[2]._id },
{ word: 'mongoose', scrambled: 'ooonsemg', solution: 'mongoose', topic: topics[2]._id },
{ word: 'schema', scrambled: 'mahesc', solution: 'schema', topic: topics[2]._id },
{ word: 'model', scrambled: 'omedl', solution: 'model', topic: topics[2]._id },
{ word: 'document', scrambled: 'dmtnueoc', solution: 'document', topic: topics[2]._id },
{ word: 'collection', scrambled: 'itocelcnol', solution: 'collection', topic: topics[2]._id },
{ word: 'id', scrambled: 'id', solution: 'id', topic: topics[2]._id },
{ word: 'objectId', scrambled: 'dtijoebc', solution: 'objectId', topic: topics[2]._id },
{ word: 'query', scrambled: 'euyrq', solution: 'query', topic: topics[2]._id },
{ word: 'populate', scrambled: 'tapupeol', solution: 'populate', topic: topics[2]._id },
{ word: 'lean', scrambled: 'enal', solution: 'lean', topic: topics[2]._id },
{ word: 'select', scrambled: 'eectsl', solution: 'select', topic: topics[2]._id },
{ word: 'sort', scrambled: 'otsr', solution: 'sort', topic: topics[2]._id },
{ word: 'limit', scrambled: 'timli', solution: 'limit', topic: topics[2]._id },
{ word: 'skip', scrambled: 'ispk', solution: 'skip', topic: topics[2]._id },
{ word: 'aggregate', scrambled: 'grgaetgea', solution: 'aggregate', topic: topics[2]._id },
{ word: 'pipeline', scrambled: 'epiinple', solution: 'pipeline', topic: topics[2]._id },
{ word: 'match', scrambled: 'tahcm', solution: 'match', topic: topics[2]._id },
{ word: 'project', scrambled: 'pojtcre', solution: 'project', topic: topics[2]._id },
{ word: 'group', scrambled: 'rgpou', solution: 'group', topic: topics[2]._id },
{ word: 'unwind', scrambled: 'ndiunw', solution: 'unwind', topic: topics[2]._id },
{ word: 'index', scrambled: 'dnxie', solution: 'index', topic: topics[2]._id },
{ word: 'unique', scrambled: 'ineuqu', solution: 'unique', topic: topics[2]._id },
{ word: 'validation', scrambled: 'dvlniiaaot', solution: 'validation', topic: topics[2]._id },
{ word: 'required', scrambled: 'uidrqeer', solution: 'required', topic: topics[2]._id },
{ word: 'default', scrambled: 'feadtul', solution: 'default', topic: topics[2]._id },
{ word: 'ref', scrambled: 'erf', solution: 'ref', topic: topics[2]._id },
{ word: 'virtual', scrambled: 'riavtul', solution: 'virtual', topic: topics[2]._id },
{ word: 'timestamps', scrambled: 'sitmastpem', solution: 'timestamps', topic: topics[2]._id },
{ word: 'connect', scrambled: 'neotncc', solution: 'connect', topic: topics[2]._id },
{ word: 'disconnect', scrambled: 'doeisctcnn', solution: 'disconnect', topic: topics[2]._id },
{ word: 'error', scrambled: 'rorre', solution: 'error', topic: topics[2]._id },
{ word: 'try catch', scrambled: 'ccyrthat', solution: 'try catch', topic: topics[2]._id },
{ word: 'logging', scrambled: 'gnggoil', solution: 'logging', topic: topics[2]._id },
{ word: 'console', scrambled: 'necolos', solution: 'console', topic: topics[2]._id },
{ word: 'debug', scrambled: 'ugbed', solution: 'debug', topic: topics[2]._id },
{ word: 'lint', scrambled: 'tinl', solution: 'lint', topic: topics[2]._id },
{ word: 'prettier', scrambled: 'epierttr', solution: 'prettier', topic: topics[2]._id },
{ word: 'eslint', scrambled: 'neslit', solution: 'eslint', topic: topics[2]._id },
{ word: 'tsconfig', scrambled: 'csfitngo', solution: 'tsconfig', topic: topics[2]._id },
{ word: 'babel', scrambled: 'beabl', solution: 'babel', topic: topics[2]._id },
{ word: 'webpack', scrambled: 'eakwcpb', solution: 'webpack', topic: topics[2]._id },
{ word: 'vite', scrambled: 'ietv', solution: 'vite', topic: topics[2]._id },
{ word: 'transpile', scrambled: 'rielsnapt', solution: 'transpile', topic: topics[2]._id },
{ word: 'compile', scrambled: 'colipme', solution: 'compile', topic: topics[2]._id },
{ word: 'buildtools', scrambled: 'slldtoibou', solution: 'buildtools', topic: topics[2]._id },
{ word: 'runtime', scrambled: 'uitmner', solution: 'runtime', topic: topics[2]._id },
{ word: 'v8', scrambled: '8v', solution: 'v8', topic: topics[2]._id },
{ word: 'libuv', scrambled: 'ulvib', solution: 'libuv', topic: topics[2]._id },
{ word: 'binding', scrambled: 'ndbingi', solution: 'binding', topic: topics[2]._id },
{ word: 'native', scrambled: 'evnati', solution: 'native', topic: topics[2]._id },
{ word: 'add on', scrambled: 'dnaod', solution: 'add on', topic: topics[2]._id },
{ word: 'ffi', scrambled: 'ffi', solution: 'ffi', topic: topics[2]._id },
{ word: 'caching', scrambled: 'hacgcin', solution: 'caching', topic: topics[2]._id },
{ word: 'redis', scrambled: 'drsie', solution: 'redis', topic: topics[2]._id },
{ word: 'sessionStore', scrambled: 'netorisssseo', solution: 'sessionStore', topic: topics[2]._id },
{ word: 'rate limiter', scrambled: 'iertiaLtemr', solution: 'rate limiter', topic: topics[2]._id },
{ word: 'throttle', scrambled: 'rloehttt', solution: 'throttle', topic: topics[2]._id },
{ word: 'proxy', scrambled: 'oprxy', solution: 'proxy', topic: topics[2]._id },
{ word: 'http server', scrambled: 'stvheerptr', solution: 'http server', topic: topics[2]._id },
{ word: 'https server', scrambled: 'seehtprtsvr', solution: 'https server', topic: topics[2]._id },
{ word: 'ssl', scrambled: 'sls', solution: 'ssl', topic: topics[2]._id },
{ word: 'certificate', scrambled: 'aecttricief', solution: 'certificate', topic: topics[2]._id },
{ word: 'webSocket', scrambled: 'ostkewcbe', solution: 'webSocket', topic: topics[2]._id },
{ word: 'socketIO', scrambled: 'koeoisct', solution: 'socketIO', topic: topics[2]._id },
{ word: 'real time', scrambled: 'ereamilt', solution: 'real time', topic: topics[2]._id },
{ word: 'event emitter', scrambled: 'rmtenteevtie', solution: 'event emitter', topic: topics[2]._id },
{ word: 'emit', scrambled: 'etim', solution: 'emit', topic: topics[2]._id },
{ word: 'on', scrambled: 'on', solution: 'on', topic: topics[2]._id },
{ word: 'off', scrambled: 'ffo', solution: 'off', topic: topics[2]._id },
{ word: 'once', scrambled: 'ncoe', solution: 'once', topic: topics[2]._id },
{ word: 'listener', scrambled: 'srntliee', solution: 'listener', topic: topics[2]._id },
{ word: 'queue', scrambled: 'euqeu', solution: 'queue', topic: topics[2]._id },
{ word: 'task', scrambled: 'sakt', solution: 'task', topic: topics[2]._id },
{ word: 'job', scrambled: 'ojb', solution: 'job', topic: topics[2]._id },
{ word: 'cron', scrambled: 'ncro', solution: 'cron', topic: topics[2]._id },
{ word: 'scheduler', scrambled: 'dcseruehl', solution: 'scheduler', topic: topics[2]._id },
{ word: 'bull', scrambled: 'bllu', solution: 'bull', topic: topics[2]._id },
{ word: 'agenda', scrambled: 'agande', solution: 'agenda', topic: topics[2]._id },
{ word: 'testing', scrambled: 'tgsteni', solution: 'testing', topic: topics[2]._id },
{ word: 'jest', scrambled: 'stje', solution: 'jest', topic: topics[2]._id },
{ word: 'mocha', scrambled: 'omhac', solution: 'mocha', topic: topics[2]._id },
{ word: 'chai', scrambled: 'icah', solution: 'chai', topic: topics[2]._id },
{ word: 'supertest', scrambled: 'sstptuere', solution: 'supertest', topic: topics[2]._id },
{ word: 'nock', scrambled: 'kcon', solution: 'nock', topic: topics[2]._id },
{ word: 'sinon', scrambled: 'isnno', solution: 'sinon', topic: topics[2]._id },
{ word: 'coverage', scrambled: 'oraeecvg', solution: 'coverage', topic: topics[2]._id },
{ word: 'integration', scrambled: 'ntogtiarine', solution: 'integration', topic: topics[2]._id },
{ word: 'unit', scrambled: 'uitn', solution: 'unit', topic: topics[2]._id },
{ word: 'e2e', scrambled: 'ee2', solution: 'e2e', topic: topics[2]._id },
{ word: 'mock', scrambled: 'ockm', solution: 'mock', topic: topics[2]._id },
{ word: 'spy', scrambled: 'psy', solution: 'spy', topic: topics[2]._id },
{ word: 'stub', scrambled: 'bstu', solution: 'stub', topic: topics[2]._id },
{ word: 'benchmark', scrambled: 'mbakhercn', solution: 'benchmark', topic: topics[2]._id },
{ word: 'loadtest', scrambled: 'eotsltda', solution: 'loadtest', topic: topics[2]._id },
{ word: 'performance', scrambled: 'fnroaecrepm', solution: 'performance', topic: topics[2]._id },
{ word: 'profiling', scrambled: 'piogrnilf', solution: 'profiling', topic: topics[2]._id },
{ word: 'memory', scrambled: 'meroym', solution: 'memory', topic: topics[2]._id },
{ word: 'gc', scrambled: 'cg', solution: 'gc', topic: topics[2]._id },
{ word: 'heap', scrambled: 'paeh', solution: 'heap', topic: topics[2]._id },
{ word: 'stack', scrambled: 'atcks', solution: 'stack', topic: topics[2]._id },
{ word: 'thread pool', scrambled: 'lhrootpdae', solution: 'thread pool', topic: topics[2]._id },
{ word: 'concurrency', scrambled: 'yrrecnucnoc', solution: 'concurrency', topic: topics[2]._id },
{ word: 'scalability', scrambled: 'lciiystabla', solution: 'scalability', topic: topics[2]._id },
{ word: 'deployment', scrambled: 'etdynomelp', solution: 'deployment', topic: topics[2]._id },
{ word: 'pm2', scrambled: 'm2p', solution: 'pm2', topic: topics[2]._id },
{ word: 'forever', scrambled: 'oefevrr', solution: 'forever', topic: topics[2]._id },
{ word: 'docker', scrambled: 'oerckd', solution: 'docker', topic: topics[2]._id },
{ word: 'container', scrambled: 'iaenoctrn', solution: 'container', topic: topics[2]._id },
{ word: 'kubernetes', scrambled: 'etebnskure', solution: 'kubernetes', topic: topics[2]._id },
{ word: 'cloud', scrambled: 'olcdu', solution: 'cloud', topic: topics[2]._id },
{ word: 'aws', scrambled: 'saw', solution: 'aws', topic: topics[2]._id },
{ word: 'lambda', scrambled: 'badalm', solution: 'lambda', topic: topics[2]._id },
{ word: 'serverless', scrambled: 'eervesssrl', solution: 'serverless', topic: topics[2]._id },
{ word: 'api', scrambled: 'api', solution: 'api', topic: topics[2]._id },
{ word: 'rest', scrambled: 'tres', solution: 'rest', topic: topics[2]._id },
{ word: 'graphQL', scrambled: 'lrgqpha', solution: 'graphQL', topic: topics[2]._id },
{ word: 'jsonrpc', scrambled: 'pcorsnj', solution: 'jsonrpc', topic: topics[2]._id },
{ word: 'remote procedure call', scrambled: 'rmeote corpeudre llac', solution: 'remote procedure call', topic: topics[2]._id },


// MongoDB
{ word: 'mongodb', scrambled: 'mobdong', solution: 'mongodb', topic: topics[3]._id },
{ word: 'document', scrambled: 'ounedcmt', solution: 'document', topic: topics[3]._id },
{ word: 'collection', scrambled: 'enilltocco', solution: 'collection', topic: topics[3]._id },
{ word: 'database', scrambled: 'teasabda', solution: 'database', topic: topics[3]._id },
{ word: 'nosql', scrambled: 'snloq', solution: 'nosql', topic: topics[3]._id },
{ word: 'bson', scrambled: 'snbo', solution: 'bson', topic: topics[3]._id },
{ word: 'json', scrambled: 'onsj', solution: 'json', topic: topics[3]._id },
{ word: 'schema', scrambled: 'aemcsh', solution: 'schema', topic: topics[3]._id },
{ word: 'model', scrambled: 'ledom', solution: 'model', topic: topics[3]._id },
{ word: 'objectId', scrambled: 'ietdobjc', solution: 'objectId', topic: topics[3]._id },
{ word: 'primary', scrambled: 'prrmiay', solution: 'primary', topic: topics[3]._id },
{ word: 'secondary', scrambled: 'aosryncde', solution: 'secondary', topic: topics[3]._id },
{ word: 'replica', scrambled: 'iaecrlp', solution: 'replica', topic: topics[3]._id },
{ word: 'replicaset', scrambled: 'aercitepsl', solution: 'replicaset', topic: topics[3]._id },
{ word: 'shard', scrambled: 'hards', solution: 'shard', topic: topics[3]._id },
{ word: 'sharding', scrambled: 'iangsrdh', solution: 'sharding', topic: topics[3]._id },
{ word: 'cluster', scrambled: 'rtsuecl', solution: 'cluster', topic: topics[3]._id },
{ word: 'aggregation', scrambled: 'gaagriotegn', solution: 'aggregation', topic: topics[3]._id },
{ word: 'pipeline', scrambled: 'eeiiplpn', solution: 'pipeline', topic: topics[3]._id },
{ word: 'match', scrambled: 'mtcha', solution: 'match', topic: topics[3]._id },
{ word: 'project', scrambled: 'jocrtpe', solution: 'project', topic: topics[3]._id },
{ word: 'group', scrambled: 'urpog', solution: 'group', topic: topics[3]._id },
{ word: 'sort', scrambled: 'rsot', solution: 'sort', topic: topics[3]._id },
{ word: 'limit', scrambled: 'iimtl', solution: 'limit', topic: topics[3]._id },
{ word: 'skip', scrambled: 'ipsk', solution: 'skip', topic: topics[3]._id },
{ word: 'unwind', scrambled: 'niwdnu', solution: 'unwind', topic: topics[3]._id },
{ word: 'lookup', scrambled: 'opklou', solution: 'lookup', topic: topics[3]._id },
{ word: 'merge', scrambled: 'remge', solution: 'merge', topic: topics[3]._id },
{ word: 'out', scrambled: 'otu', solution: 'out', topic: topics[3]._id },
{ word: 'facet', scrambled: 'ctfea', solution: 'facet', topic: topics[3]._id },
{ word: 'index', scrambled: 'eidnx', solution: 'index', topic: topics[3]._id },
{ word: 'compound', scrambled: 'oopmnucd', solution: 'compound', topic: topics[3]._id },
{ word: 'text', scrambled: 'extt', solution: 'text', topic: topics[3]._id },
{ word: 'unique', scrambled: 'euniuq', solution: 'unique', topic: topics[3]._id },
{ word: 'sparse', scrambled: 'psrase', solution: 'sparse', topic: topics[3]._id },
{ word: 'hashed', scrambled: 'hehdas', solution: 'hashed', topic: topics[3]._id },
{ word: 'ttl', scrambled: 'tlt', solution: 'ttl', topic: topics[3]._id },
{ word: 'geospatial', scrambled: 'aigapolset', solution: 'geospatial', topic: topics[3]._id },
{ word: 'wildcard', scrambled: 'dlwicrda', solution: 'wildcard', topic: topics[3]._id },
{ word: 'covered', scrambled: 'odecevr', solution: 'covered', topic: topics[3]._id },
{ word: 'cursor', scrambled: 'cusrro', solution: 'cursor', topic: topics[3]._id },
{ word: 'query', scrambled: 'ryuqe', solution: 'query', topic: topics[3]._id },
{ word: 'filter', scrambled: 'lfetri', solution: 'filter', topic: topics[3]._id },
{ word: 'projection', scrambled: 'rpinjootce', solution: 'projection', topic: topics[3]._id },
{ word: 'update', scrambled: 'edaput', solution: 'update', topic: topics[3]._id },
{ word: 'delete', scrambled: 'edltee', solution: 'delete', topic: topics[3]._id },
{ word: 'insert', scrambled: 'eitnsr', solution: 'insert', topic: topics[3]._id },
{ word: 'replace', scrambled: 'reapcle', solution: 'replace', topic: topics[3]._id },
{ word: 'bulk', scrambled: 'kulb', solution: 'bulk', topic: topics[3]._id },
{ word: 'writeConcern', scrambled: 'cnrcorweetni', solution: 'writeConcern', topic: topics[3]._id },
{ word: 'readConcern', scrambled: 'oandnceerrc', solution: 'readConcern', topic: topics[3]._id },
{ word: 'readPreference', scrambled: 'eepfcenaerrrde', solution: 'readPreference', topic: topics[3]._id },
{ word: 'transaction', scrambled: 'ocsnaatntri', solution: 'transaction', topic: topics[3]._id },
{ word: 'session', scrambled: 'snossei', solution: 'session', topic: topics[3]._id },
{ word: 'atomicity', scrambled: 'imtotaiyc', solution: 'atomicity', topic: topics[3]._id },
{ word: 'consistency', scrambled: 'tynsneiscoc', solution: 'consistency', topic: topics[3]._id },
{ word: 'isolation', scrambled: 'aoiilstno', solution: 'isolation', topic: topics[3]._id },
{ word: 'durability', scrambled: 'ldrtibyuai', solution: 'durability', topic: topics[3]._id },
{ word: 'acidity', scrambled: 'cyatiid', solution: 'acidity', topic: topics[3]._id },
{ word: 'rollback', scrambled: 'klalrocb', solution: 'rollback', topic: topics[3]._id },
{ word: 'operation', scrambled: 'noeoptria', solution: 'operation', topic: topics[3]._id },
{ word: 'oplog', scrambled: 'poglo', solution: 'oplog', topic: topics[3]._id },
{ word: 'change stream', scrambled: 'rtSmcegnaeha', solution: 'change stream', topic: topics[3]._id },
{ word: 'watch', scrambled: 'hctaw', solution: 'watch', topic: topics[3]._id },
{ word: 'event', scrambled: 'tneve', solution: 'event', topic: topics[3]._id },
{ word: 'trigger', scrambled: 'gtgrrie', solution: 'trigger', topic: topics[3]._id },
{ word: 'monitoring', scrambled: 'itonoringm', solution: 'monitoring', topic: topics[3]._id },
{ word: 'performance', scrambled: 'rfcremenopa', solution: 'performance', topic: topics[3]._id },
{ word: 'analyze', scrambled: 'yaelanz', solution: 'analyze', topic: topics[3]._id },
{ word: 'stats', scrambled: 'asstt', solution: 'stats', topic: topics[3]._id },
{ word: 'validation', scrambled: 'laioitnavd', solution: 'validation', topic: topics[3]._id },
{ word: 'required', scrambled: 'deeruqri', solution: 'required', topic: topics[3]._id },
{ word: 'default', scrambled: 'dfetlua', solution: 'default', topic: topics[3]._id },
{ word: 'enum', scrambled: 'umne', solution: 'enum', topic: topics[3]._id },
{ word: 'ref', scrambled: 'efr', solution: 'ref', topic: topics[3]._id },
{ word: 'virtual', scrambled: 'tavruli', solution: 'virtual', topic: topics[3]._id },
{ word: 'populate', scrambled: 'papetlou', solution: 'populate', topic: topics[3]._id },
{ word: 'discriminator', scrambled: 'adncorrmitiis', solution: 'discriminator', topic: topics[3]._id },
{ word: 'timestamps', scrambled: 'stesmatimp', solution: 'timestamps', topic: topics[3]._id },
{ word: 'middleware', scrambled: 'ddwrlameie', solution: 'middleware', topic: topics[3]._id },
{ word: 'connection', scrambled: 'etncnoonic', solution: 'connection', topic: topics[3]._id },
{ word: 'uri', scrambled: 'iur', solution: 'uri', topic: topics[3]._id },
{ word: 'client', scrambled: 'icnetl', solution: 'client', topic: topics[3]._id },
{ word: 'server', scrambled: 'sevrer', solution: 'server', topic: topics[3]._id },
{ word: 'atlas', scrambled: 'laast', solution: 'atlas', topic: topics[3]._id },
{ word: 'cloud', scrambled: 'lucod', solution: 'cloud', topic: topics[3]._id },
{ word: 'polling', scrambled: 'lignopl', solution: 'polling', topic: topics[3]._id },
{ word: 'shared', scrambled: 'eshrad', solution: 'shared', topic: topics[3]._id },
{ word: 'dedicated', scrambled: 'dedaetcdi', solution: 'dedicated', topic: topics[3]._id },
{ word: 'backups', scrambled: 'pbsukca', solution: 'backups', topic: topics[3]._id },
{ word: 'restore', scrambled: 'oretsre', solution: 'restore', topic: topics[3]._id },
{ word: 'snapshot', scrambled: 'stopahns', solution: 'snapshot', topic: topics[3]._id },
{ word: 'security', scrambled: 'tsrcyiue', solution: 'security', topic: topics[3]._id },
{ word: 'auth', scrambled: 'auth', solution: 'auth', topic: topics[3]._id },
{ word: 'scram', scrambled: 'mcras', solution: 'scram', topic: topics[3]._id },
{ word: 'x509', scrambled: '059x', solution: 'x509', topic: topics[3]._id },
{ word: 'ldap', scrambled: 'ldpa', solution: 'ldap', topic: topics[3]._id },
{ word: 'running queries', scrambled: 'nnginur iereqsu', solution: 'running queries', topic: topics[3]._id },
{ word: 'authorization', scrambled: 'tauiitorzonah', solution: 'authorization', topic: topics[3]._id },
{ word: 'role', scrambled: 'roel', solution: 'role', topic: topics[3]._id },
{ word: 'privilege', scrambled: 'ipgilreev', solution: 'privilege', topic: topics[3]._id },
{ word: 'user', scrambled: 'usre', solution: 'user', topic: topics[3]._id },
{ word: 'password', scrambled: 'sspadorw', solution: 'password', topic: topics[3]._id },
{ word: 'encryption', scrambled: 'tynoncierp', solution: 'encryption', topic: topics[3]._id },
{ word: 'tls', scrambled: 'slt', solution: 'tls', topic: topics[3]._id },
{ word: 'ssl', scrambled: 'ssl', solution: 'ssl', topic: topics[3]._id },
{ word: 'firewall', scrambled: 'aweflrli', solution: 'firewall', topic: topics[3]._id },
{ word: 'vpc', scrambled: 'cvp', solution: 'vpc', topic: topics[3]._id },
{ word: 'ip whitelist', scrambled: 'ihitiswelpt', solution: 'ip whitelist', topic: topics[3]._id },
{ word: 'indexing', scrambled: 'ixngdein', solution: 'indexing', topic: topics[3]._id },
{ word: 'query planner', scrambled: 'renrequlpnay', solution: 'query planner', topic: topics[3]._id },
{ word: 'execution plan', scrambled: 'cpuneitlnoeax', solution: 'execution plan', topic: topics[3]._id },
{ word: 'optimization', scrambled: 'oaptniziomit', solution: 'optimization', topic: topics[3]._id },
{ word: 'profiler', scrambled: 'rlfirepo', solution: 'profiler', topic: topics[3]._id },
{ word: 'logging', scrambled: 'liggogn', solution: 'logging', topic: topics[3]._id },
{ word: 'metrics', scrambled: 'tcmsrie', solution: 'metrics', topic: topics[3]._id },
{ word: 'alerts', scrambled: 'lsrate', solution: 'alerts', topic: topics[3]._id },
{ word: 'dashboard', scrambled: 'osdadhrba', solution: 'dashboard', topic: topics[3]._id },
{ word: 'compass', scrambled: 'cpssaom', solution: 'compass', topic: topics[3]._id },
{ word: 'mongosh', scrambled: 'ognsohm', solution: 'mongosh', topic: topics[3]._id },
{ word: 'shell', scrambled: 'hlsel', solution: 'shell', topic: topics[3]._id },
{ word: 'cli', scrambled: 'lci', solution: 'cli', topic: topics[3]._id },
{ word: 'gui', scrambled: 'igu', solution: 'gui', topic: topics[3]._id },
{ word: 'api', scrambled: 'pai', solution: 'api', topic: topics[3]._id },
{ word: 'driver', scrambled: 'ridrve', solution: 'driver', topic: topics[3]._id },
{ word: 'mongoose', scrambled: 'noeoogms', solution: 'mongoose', topic: topics[3]._id },
{ word: 'node', scrambled: 'doen', solution: 'node', topic: topics[3]._id },
{ word: 'express', scrambled: 'eepxrss', solution: 'express', topic: topics[3]._id },
{ word: 'connector', scrambled: 'ncetnoorc', solution: 'connector', topic: topics[3]._id },
{ word: 'native', scrambled: 'tveina', solution: 'native', topic: topics[3]._id },
{ word: 'orm', scrambled: 'omr', solution: 'orm', topic: topics[3]._id },
{ word: 'odm', scrambled: 'dmo', solution: 'odm', topic: topics[3]._id },
{ word: 'plugin', scrambled: 'nilpgu', solution: 'plugin', topic: topics[3]._id },
{ word: 'hook', scrambled: 'kooh', solution: 'hook', topic: topics[3]._id },
{ word: 'validationError', scrambled: 'olrivtridanoaer', solution: 'validationError', topic: topics[3]._id },
{ word: 'castError', scrambled: 'roaecsrtr', solution: 'castError', topic: topics[3]._id },
{ word: 'writeError', scrambled: 'wtireeorrr', solution: 'writeError', topic: topics[3]._id },
{ word: 'duplicateKey', scrambled: 'ydlpctkieuae', solution: 'duplicateKey', topic: topics[3]._id },
{ word: 'timeout', scrambled: 'muoeitt', solution: 'timeout', topic: topics[3]._id },
{ word: 'network', scrambled: 'otkwnre', solution: 'network', topic: topics[3]._id },
{ word: 'latency', scrambled: 'teyncla', solution: 'latency', topic: topics[3]._id },
{ word: 'throughput', scrambled: 'ohupthrgut', solution: 'throughput', topic: topics[3]._id },
{ word: 'availability', scrambled: 'liablaitiyav', solution: 'availability', topic: topics[3]._id },
{ word: 'scalability', scrambled: 'laiatbilsyc', solution: 'scalability', topic: topics[3]._id },
{ word: 'resilience', scrambled: 'eleencirsi', solution: 'resilience', topic: topics[3]._id },
{ word: 'eventual', scrambled: 'uveaetln', solution: 'eventual', topic: topics[3]._id },
{ word: 'unique index', scrambled: 'qeuiun dniex', solution: 'unique index', topic: topics[3]._id },
{ word: 'cap', scrambled: 'apc', solution: 'cap', topic: topics[3]._id },
{ word: 'partition', scrambled: 'iipnratto', solution: 'partition', topic: topics[3]._id },
{ word: 'tolerance', scrambled: 'reaotelnc', solution: 'tolerance', topic: topics[3]._id },
{ word: 'horizontal', scrambled: 'hizloaront', solution: 'horizontal', topic: topics[3]._id },
{ word: 'vertical', scrambled: 'caeivrtl', solution: 'vertical', topic: topics[3]._id },
{ word: 'replication', scrambled: 'nocitleirap', solution: 'replication', topic: topics[3]._id },
{ word: 'balancer', scrambled: 'eblaanrc', solution: 'balancer', topic: topics[3]._id },
{ word: 'chunk', scrambled: 'ucnhk', solution: 'chunk', topic: topics[3]._id },
{ word: 'zone', scrambled: 'zeno', solution: 'zone', topic: topics[3]._id },
{ word: 'tag', scrambled: 'gat', solution: 'tag', topic: topics[3]._id },
{ word: 'config', scrambled: 'nfoicg', solution: 'config', topic: topics[3]._id },
{ word: 'metadata', scrambled: 'atmteada', solution: 'metadata', topic: topics[3]._id },
{ word: 'heartbeat', scrambled: 'atatrebeh', solution: 'heartbeat', topic: topics[3]._id },
{ word: 'election', scrambled: 'ectienlo', solution: 'election', topic: topics[3]._id },
{ word: 'arbiter', scrambled: 'rarbeti', solution: 'arbiter', topic: topics[3]._id },
{ word: 'majority', scrambled: 'ayotjmri', solution: 'majority', topic: topics[3]._id },
{ word: 'write', scrambled: 'wrtie', solution: 'write', topic: topics[3]._id },
{ word: 'read', scrambled: 'rade', solution: 'read', topic: topics[3]._id },
{ word: 'acknowledgment', scrambled: 'egewltankndomc', solution: 'acknowledgment', topic: topics[3]._id },
{ word: 'retry', scrambled: 'yrrte', solution: 'retry', topic: topics[3]._id },
{ word: 'failover', scrambled: 'rfivoale', solution: 'failover', topic: topics[3]._id },
{ word: 'downtime', scrambled: 'twmeoind', solution: 'downtime', topic: topics[3]._id },
{ word: 'uptime', scrambled: 'uepmti', solution: 'uptime', topic: topics[3]._id },
{ word: 'maintenance', scrambled: 'nemennitaac', solution: 'maintenance', topic: topics[3]._id },
{ word: 'migration', scrambled: 'iiomragtn', solution: 'migration', topic: topics[3]._id },
{ word: 'data', scrambled: 'adat', solution: 'data', topic: topics[3]._id },
{ word: 'ingestion', scrambled: 'iinsgteon', solution: 'ingestion', topic: topics[3]._id },
{ word: 'export', scrambled: 'trpxoe', solution: 'export', topic: topics[3]._id },
{ word: 'import', scrambled: 'mitpor', solution: 'import', topic: topics[3]._id },
{ word: 'bsondump', scrambled: 'spomnudb', solution: 'bsondump', topic: topics[3]._id },
{ word: 'mongodump', scrambled: 'gudnmmopo', solution: 'mongodump', topic: topics[3]._id },
{ word: 'mongorestore', scrambled: 'ormgeroontes', solution: 'mongorestore', topic: topics[3]._id },
{ word: 'mongoimport', scrambled: 'gmtinooporm', solution: 'mongoimport', topic: topics[3]._id },
{ word: 'mongoexport', scrambled: 'xronmtpgoeo', solution: 'mongoexport', topic: topics[3]._id },
{ word: 'license', scrambled: 'eeinlsc', solution: 'license', topic: topics[3]._id },
{ word: 'support', scrambled: 'tprpous', solution: 'support', topic: topics[3]._id },
{ word: 'enterprise', scrambled: 'ntipereser', solution: 'enterprise', topic: topics[3]._id },
{ word: 'community', scrambled: 'micyountm', solution: 'community', topic: topics[3]._id },
{ word: 'subscription', scrambled: 'icisbntposru', solution: 'subscription', topic: topics[3]._id },
{ word: 'slack', scrambled: 'cakls', solution: 'slack', topic: topics[3]._id },
{ word: 'forum', scrambled: 'mrfuo', solution: 'forum', topic: topics[3]._id },
{ word: 'docs', scrambled: 'dsoc', solution: 'docs', topic: topics[3]._id },
{ word: 'playground', scrambled: 'larydpgonu', solution: 'playground', topic: topics[3]._id },
{ word: 'atlas search', scrambled: 'ahlraecssat', solution: 'atlas search', topic: topics[3]._id },

// Express
{ word: 'express', scrambled: 'eesrxsp', solution: 'express', topic: topics[4]._id },
{ word: 'middleware', scrambled: 'eridaldewm', solution: 'middleware', topic: topics[4]._id },
{ word: 'router', scrambled: 'ruetro', solution: 'router', topic: topics[4]._id },
{ word: 'route', scrambled: 'tueor', solution: 'route', topic: topics[4]._id },
{ word: 'routing', scrambled: 'rntuoig', solution: 'routing', topic: topics[4]._id },
{ word: 'handler', scrambled: 'drehaln', solution: 'handler', topic: topics[4]._id },
{ word: 'endpoint', scrambled: 'nndipote', solution: 'endpoint', topic: topics[4]._id },
{ word: 'request', scrambled: 'uetsreq', solution: 'request', topic: topics[4]._id },
{ word: 'response', scrambled: 'rnpeesso', solution: 'response', topic: topics[4]._id },
{ word: 'status', scrambled: 'tasstu', solution: 'status', topic: topics[4]._id },
{ word: 'header', scrambled: 'aeredh', solution: 'header', topic: topics[4]._id },
{ word: 'body', scrambled: 'dboy', solution: 'body', topic: topics[4]._id },
{ word: 'query', scrambled: 'rqeyu', solution: 'query', topic: topics[4]._id },
{ word: 'params', scrambled: 'sarpam', solution: 'params', topic: topics[4]._id },
{ word: 'url', scrambled: 'ulr', solution: 'url', topic: topics[4]._id },
{ word: 'method', scrambled: 'mhotde', solution: 'method', topic: topics[4]._id },
{ word: 'get', scrambled: 'tge', solution: 'get', topic: topics[4]._id },
{ word: 'post', scrambled: 'opst', solution: 'post', topic: topics[4]._id },
{ word: 'put', scrambled: 'tup', solution: 'put', topic: topics[4]._id },
{ word: 'delete', scrambled: 'leteed', solution: 'delete', topic: topics[4]._id },
{ word: 'patch', scrambled: 'pcath', solution: 'patch', topic: topics[4]._id },
{ word: 'options', scrambled: 'ooptsni', solution: 'options', topic: topics[4]._id },
{ word: 'head', scrambled: 'hdea', solution: 'head', topic: topics[4]._id },
{ word: 'app', scrambled: 'pap', solution: 'app', topic: topics[4]._id },
{ word: 'listen', scrambled: 'elistn', solution: 'listen', topic: topics[4]._id },
{ word: 'port', scrambled: 'otpr', solution: 'port', topic: topics[4]._id },
{ word: 'callback', scrambled: 'lcabkcla', solution: 'callback', topic: topics[4]._id },
{ word: 'next', scrambled: 'tnex', solution: 'next', topic: topics[4]._id },
{ word: 'send', scrambled: 'nsed', solution: 'send', topic: topics[4]._id },
{ word: 'json', scrambled: 'onsj', solution: 'json', topic: topics[4]._id },
{ word: 'static', scrambled: 'itasct', solution: 'static', topic: topics[4]._id },
{ word: 'template', scrambled: 'aepmeltt', solution: 'template', topic: topics[4]._id },
{ word: 'view', scrambled: 'wiev', solution: 'view', topic: topics[4]._id },
{ word: 'engine', scrambled: 'igenne', solution: 'engine', topic: topics[4]._id },
{ word: 'pug', scrambled: 'gup', solution: 'pug', topic: topics[4]._id },
{ word: 'ejs', scrambled: 'jse', solution: 'ejs', topic: topics[4]._id },
{ word: 'hbs', scrambled: 'sbh', solution: 'hbs', topic: topics[4]._id },
{ word: 'render', scrambled: 'eedrnr', solution: 'render', topic: topics[4]._id },
{ word: 'locals', scrambled: 'slcalo', solution: 'locals', topic: topics[4]._id },
{ word: 'layout', scrambled: 'toluya', solution: 'layout', topic: topics[4]._id },
{ word: 'partial', scrambled: 'rtiplaa', solution: 'partial', topic: topics[4]._id },
{ word: 'session', scrambled: 'nosisse', solution: 'session', topic: topics[4]._id },
{ word: 'cookie', scrambled: 'ocieok', solution: 'cookie', topic: topics[4]._id },
{ word: 'cookie parser', scrambled: 'esircokorape', solution: 'cookie parser', topic: topics[4]._id },
{ word: 'body parser', scrambled: 'esroabdrpy', solution: 'body parser', topic: topics[4]._id },
{ word: 'url encoded', scrambled: 'rloeucdend', solution: 'url encoded', topic: topics[4]._id },
{ word: 'json parser', scrambled: 'ssnajerpro', solution: 'json parser', topic: topics[4]._id },
{ word: 'cors', scrambled: 'csor', solution: 'cors', topic: topics[4]._id },
{ word: 'helmet', scrambled: 'ltmeeh', solution: 'helmet', topic: topics[4]._id },
{ word: 'compression', scrambled: 'emconissopr', solution: 'compression', topic: topics[4]._id },
{ word: 'logger', scrambled: 'lrogge', solution: 'logger', topic: topics[4]._id },
{ word: 'morgan', scrambled: 'agmron', solution: 'morgan', topic: topics[4]._id },
{ word: 'debug', scrambled: 'gbedu', solution: 'debug', topic: topics[4]._id },
{ word: 'dotenv', scrambled: 'vondet', solution: 'dotenv', topic: topics[4]._id },
{ word: 'env', scrambled: 'nve', solution: 'env', topic: topics[4]._id },
{ word: 'config', scrambled: 'ocnfig', solution: 'config', topic: topics[4]._id },
{ word: 'validation', scrambled: 'aldinvatio', solution: 'validation', topic: topics[4]._id },
{ word: 'express validator', scrambled: 'ilasxdesprretavo', solution: 'express validator', topic: topics[4]._id },
{ word: 'sanitize', scrambled: 'aneiizts', solution: 'sanitize', topic: topics[4]._id },
{ word: 'auth', scrambled: 'uath', solution: 'auth', topic: topics[4]._id },
{ word: 'jwt', scrambled: 'wtj', solution: 'jwt', topic: topics[4]._id },
{ word: 'passport', scrambled: 'saopprst', solution: 'passport', topic: topics[4]._id },
{ word: 'strategy', scrambled: 'atgtyrse', solution: 'strategy', topic: topics[4]._id },
{ word: 'local', scrambled: 'laolc', solution: 'local', topic: topics[4]._id },
{ word: 'bearer', scrambled: 'beerra', solution: 'bearer', topic: topics[4]._id },
{ word: 'oauth', scrambled: 'uoaht', solution: 'oauth', topic: topics[4]._id },
{ word: 'openId', scrambled: 'pnoedi', solution: 'openId', topic: topics[4]._id },
{ word: 'login', scrambled: 'nilog', solution: 'login', topic: topics[4]._id },
{ word: 'logout', scrambled: 'uooltg', solution: 'logout', topic: topics[4]._id },
{ word: 'signin', scrambled: 'gisinn', solution: 'signin', topic: topics[4]._id },
{ word: 'signup', scrambled: 'usinpg', solution: 'signup', topic: topics[4]._id },
{ word: 'bcrypt', scrambled: 'bpyctr', solution: 'bcrypt', topic: topics[4]._id },
{ word: 'hash', scrambled: 'hsha', solution: 'hash', topic: topics[4]._id },
{ word: 'salt', scrambled: 'astl', solution: 'salt', topic: topics[4]._id },
{ word: 'token', scrambled: 'otnke', solution: 'token', topic: topics[4]._id },
{ word: 'secure', scrambled: 'esurec', solution: 'secure', topic: topics[4]._id },
{ word: 'csrf', scrambled: 'rscf', solution: 'csrf', topic: topics[4]._id },
{ word: 'xss', scrambled: 'xss', solution: 'xss', topic: topics[4]._id },
{ word: 'rate limit', scrambled: 'aiiettmrL', solution: 'rate limit', topic: topics[4]._id },
{ word: 'throttle', scrambled: 'rtlthtoe', solution: 'throttle', topic: topics[4]._id },
{ word: 'proxy', scrambled: 'proxy', solution: 'proxy', topic: topics[4]._id },
{ word: 'reverse proxy', scrambled: 'peeorrrevsxy', solution: 'reverse proxy', topic: topics[4]._id },
{ word: 'load balancer', scrambled: 'adalacnobrle', solution: 'load balancer', topic: topics[4]._id },
{ word: 'cluster', scrambled: 'slurcet', solution: 'cluster', topic: topics[4]._id },
{ word: 'scaling', scrambled: 'sgialnc', solution: 'scaling', topic: topics[4]._id },
{ word: 'performance', scrambled: 'mnraceorfep', solution: 'performance', topic: topics[4]._id },
{ word: 'cache', scrambled: 'aecch', solution: 'cache', topic: topics[4]._id },
{ word: 'redis', scrambled: 'ersid', solution: 'redis', topic: topics[4]._id },
{ word: 'memory', scrambled: 'roymme', solution: 'memory', topic: topics[4]._id },
{ word: 'sessionStore', scrambled: 'ooseessnrist', solution: 'sessionStore', topic: topics[4]._id },
{ word: 'error', scrambled: 'errro', solution: 'error', topic: topics[4]._id },
{ word: 'trycatch', scrambled: 'tcrtchya', solution: 'trycatch', topic: topics[4]._id },
{ word: 'errorhandler', scrambled: 'rhlernaroder', solution: 'errorhandler', topic: topics[4]._id },
{ word: 'stacktrace', scrambled: 'cacktraest', solution: 'stacktrace', topic: topics[4]._id },
{ word: 'rescue', scrambled: 'rueces', solution: 'rescue', topic: topics[4]._id },
{ word: '404', scrambled: '440', solution: '404', topic: topics[4]._id },
{ word: '500', scrambled: '050', solution: '500', topic: topics[4]._id },
{ word: 'notfound', scrambled: 'notonduf', solution: 'notfound', topic: topics[4]._id },
{ word: 'unauthorized', scrambled: 'uuhanzoetrid', solution: 'unauthorized', topic: topics[4]._id },
{ word: 'forbidden', scrambled: 'ondfdberi', solution: 'forbidden', topic: topics[4]._id },
{ word: 'mongo', scrambled: 'ongmo', solution: 'mongo', topic: topics[4]._id },
{ word: 'mongoose', scrambled: 'oonosmeg', solution: 'mongoose', topic: topics[4]._id },
{ word: 'model', scrambled: 'odmle', solution: 'model', topic: topics[4]._id },
{ word: 'schema', scrambled: 'casmeh', solution: 'schema', topic: topics[4]._id },
{ word: 'database', scrambled: 'esbaatad', solution: 'database', topic: topics[4]._id },
{ word: 'connection', scrambled: 'ocinctonen', solution: 'connection', topic: topics[4]._id },
{ word: 'uri', scrambled: 'rui', solution: 'uri', topic: topics[4]._id },
{ word: 'populate', scrambled: 'lepuaopt', solution: 'populate', topic: topics[4]._id },
{ word: 'lean', scrambled: 'aeln', solution: 'lean', topic: topics[4]._id },
{ word: 'sort', scrambled: 'rots', solution: 'sort', topic: topics[4]._id },
{ word: 'select', scrambled: 'eltces', solution: 'select', topic: topics[4]._id },
{ word: 'limit', scrambled: 'ilmit', solution: 'limit', topic: topics[4]._id },
{ word: 'skip', scrambled: 'pisk', solution: 'skip', topic: topics[4]._id },
{ word: 'aggregate', scrambled: 'eagertgag', solution: 'aggregate', topic: topics[4]._id },
{ word: 'group', scrambled: 'rpoug', solution: 'group', topic: topics[4]._id },
{ word: 'match', scrambled: 'hcmta', solution: 'match', topic: topics[4]._id },
{ word: 'project', scrambled: 'tcjrope', solution: 'project', topic: topics[4]._id },
{ word: 'pipeline', scrambled: 'pieneilp', solution: 'pipeline', topic: topics[4]._id },
{ word: 'unwind', scrambled: 'inudnw', solution: 'unwind', topic: topics[4]._id },
{ word: 'log', scrambled: 'gol', solution: 'log', topic: topics[4]._id },
{ word: 'console', scrambled: 'lscooen', solution: 'console', topic: topics[4]._id },
{ word: 'chalk', scrambled: 'chkla', solution: 'chalk', topic: topics[4]._id },
{ word: 'clustering', scrambled: 'ngrsielctu', solution: 'clustering', topic: topics[4]._id },
{ word: 'cpu', scrambled: 'puc', solution: 'cpu', topic: topics[4]._id },
{ word: 'thread', scrambled: 'hadter', solution: 'thread', topic: topics[4]._id },
{ word: 'process', scrambled: 'opcsers', solution: 'process', topic: topics[4]._id },
{ word: 'fork', scrambled: 'orfk', solution: 'fork', topic: topics[4]._id },
{ word: 'child process', scrambled: 'lcsohpesrdci', solution: 'child process', topic: topics[4]._id },
{ word: 'spawn', scrambled: 'snwap', solution: 'spawn', topic: topics[4]._id },
{ word: 'nodemon', scrambled: 'meonodn', solution: 'nodemon', topic: topics[4]._id },
{ word: 'npx', scrambled: 'xpn', solution: 'npx', topic: topics[4]._id },
{ word: 'npm', scrambled: 'mnp', solution: 'npm', topic: topics[4]._id },
{ word: 'package', scrambled: 'gacepka', solution: 'package', topic: topics[4]._id },
{ word: 'script', scrambled: 'rptcis', solution: 'script', topic: topics[4]._id },
{ word: 'start', scrambled: 'sattr', solution: 'start', topic: topics[4]._id },
{ word: 'build', scrambled: 'dblui', solution: 'build', topic: topics[4]._id },
{ word: 'dev', scrambled: 'edv', solution: 'dev', topic: topics[4]._id },
{ word: 'test', scrambled: 'stte', solution: 'test', topic: topics[4]._id },
{ word: 'jest', scrambled: 'etjs', solution: 'jest', topic: topics[4]._id },
{ word: 'mocha', scrambled: 'hamoc', solution: 'mocha', topic: topics[4]._id },
{ word: 'chai', scrambled: 'hica', solution: 'chai', topic: topics[4]._id },
{ word: 'supertest', scrambled: 'petersuts', solution: 'supertest', topic: topics[4]._id },
{ word: 'nock', scrambled: 'konc', solution: 'nock', topic: topics[4]._id },
{ word: 'mock', scrambled: 'kmoc', solution: 'mock', topic: topics[4]._id },
{ word: 'stub', scrambled: 'btus', solution: 'stub', topic: topics[4]._id },
{ word: 'spy', scrambled: 'syp', solution: 'spy', topic: topics[4]._id },
{ word: 'unit', scrambled: 'tuni', solution: 'unit', topic: topics[4]._id },
{ word: 'integration', scrambled: 'eointtagnir', solution: 'integration', topic: topics[4]._id },
{ word: 'coverage', scrambled: 'rcaeogve', solution: 'coverage', topic: topics[4]._id },
{ word: 'ts', scrambled: 'st', solution: 'ts', topic: topics[4]._id },
{ word: 'typescript', scrambled: 'ticppstrye', solution: 'typescript', topic: topics[4]._id },
{ word: 'transpile', scrambled: 'ptlnasrie', solution: 'transpile', topic: topics[4]._id },
{ word: 'babel', scrambled: 'eabbl', solution: 'babel', topic: topics[4]._id },
{ word: 'webpack', scrambled: 'akpwcbe', solution: 'webpack', topic: topics[4]._id },
{ word: 'vite', scrambled: 'teiv', solution: 'vite', topic: topics[4]._id },
{ word: 'esmodule', scrambled: 'odesmelu', solution: 'esmodule', topic: topics[4]._id },
{ word: 'commonjs', scrambled: 'msojcnom', solution: 'commonjs', topic: topics[4]._id },
{ word: 'import', scrambled: 'pmorti', solution: 'import', topic: topics[4]._id },
{ word: 'export', scrambled: 'optxer', solution: 'export', topic: topics[4]._id },
{ word: 'path', scrambled: 'apth', solution: 'path', topic: topics[4]._id },
{ word: 'fs', scrambled: 'sf', solution: 'fs', topic: topics[4]._id },
{ word: 'os', scrambled: 'os', solution: 'os', topic: topics[4]._id },
{ word: 'http', scrambled: 'tpth', solution: 'http', topic: topics[4]._id },
{ word: 'https', scrambled: 'shptt', solution: 'https', topic: topics[4]._id },
{ word: 'net', scrambled: 'net', solution: 'net', topic: topics[4]._id },
{ word: 'tls', scrambled: 'lst', solution: 'tls', topic: topics[4]._id },
{ word: 'ssl', scrambled: 'lss', solution: 'ssl', topic: topics[4]._id },
{ word: 'server', scrambled: 'erersv', solution: 'server', topic: topics[4]._id },
{ word: 'client', scrambled: 'tlinec', solution: 'client', topic: topics[4]._id },
{ word: 'api', scrambled: 'iap', solution: 'api', topic: topics[4]._id },
{ word: 'rest', scrambled: 'esrt', solution: 'rest', topic: topics[4]._id },
{ word: 'graphql', scrambled: 'qpghlar', solution: 'graphql', topic: topics[4]._id },
{ word: 'soap', scrambled: 'spoa', solution: 'soap', topic: topics[4]._id },
{ word: 'rpc', scrambled: 'prc', solution: 'rpc', topic: topics[4]._id },
{ word: 'webhook', scrambled: 'wobhoke', solution: 'webhook', topic: topics[4]._id },
{ word: 'openapi', scrambled: 'npaepio', solution: 'openapi', topic: topics[4]._id },
{ word: 'swagger', scrambled: 'gsewgar', solution: 'swagger', topic: topics[4]._id },
{ word: 'docs', scrambled: 'scod', solution: 'docs', topic: topics[4]._id },
{ word: 'postman', scrambled: 'msaptno', solution: 'postman', topic: topics[4]._id },
{ word: 'monitor', scrambled: 'iontmro', solution: 'monitor', topic: topics[4]._id },
{ word: 'uptime', scrambled: 'itpmue', solution: 'uptime', topic: topics[4]._id },
{ word: 'downtime', scrambled: 'teiowdnm', solution: 'downtime', topic: topics[4]._id },
{ word: 'ping', scrambled: 'ipng', solution: 'ping', topic: topics[4]._id },
{ word: 'healthcheck', scrambled: 'chhelckhtae', solution: 'healthcheck', topic: topics[4]._id },
{ word: 'metrics', scrambled: 'tcerism', solution: 'metrics', topic: topics[4]._id },
{ word: 'alerts', scrambled: 'ersatl', solution: 'alerts', topic: topics[4]._id },
{ word: 'dashboard', scrambled: 'absdaohdr', solution: 'dashboard', topic: topics[4]._id },
{ word: 'insight', scrambled: 'sgnihit', solution: 'insight', topic: topics[4]._id },
{ word: 'observer', scrambled: 'revsbore', solution: 'observer', topic: topics[4]._id },
{ word: 'deployment', scrambled: 'tmynlpedoe', solution: 'deployment', topic: topics[4]._id },
{ word: 'ci', scrambled: 'ci', solution: 'ci', topic: topics[4]._id },
{ word: 'cd', scrambled: 'dc', solution: 'cd', topic: topics[4]._id },
{ word: 'heroku', scrambled: 'urhoke', solution: 'heroku', topic: topics[4]._id },
{ word: 'vercel', scrambled: 'cevelr', solution: 'vercel', topic: topics[4]._id },
{ word: 'aws', scrambled: 'saw', solution: 'aws', topic: topics[4]._id },
{ word: 'lambda', scrambled: 'madalb', solution: 'lambda', topic: topics[4]._id },
{ word: 'docker', scrambled: 'dorkec', solution: 'docker', topic: topics[4]._id },
{ word: 'container', scrambled: 'trcnaoein', solution: 'container', topic: topics[4]._id },
{ word: 'kubernetes', scrambled: 'eeetbsnruk', solution: 'kubernetes', topic: topics[4]._id },
{ word: 'cloud', scrambled: 'ludco', solution: 'cloud', topic: topics[4]._id },

        ]);
        console.log(`Seeded ${anagrams.length} anagrams!`);

        // Optionally seed users
        const users = await User.create([
            { username: 'testuser', email: 'test@example.com', password: 'password123' },
        ]);
        console.log(`Seeded ${users.length} users!`);
    } catch (err) {
        console.error('Error while seeding:', err);
    throw err; //rethrows error to handle it in main()
    }
}

async function main() {
    try {
    await connectDB(); // connect to database
    await seed(); // run seed function
} catch (err) {
    console.error('Unexpected error during seeding:', err);
} finally {
    await mongoose.connection.close(); // close DB connection
    console.log('Database connection closed.');
}
}

main();
